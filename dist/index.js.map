{
  "version": 3,
  "sources": ["../src/server/index.ts", "../src/common/consts.ts", "../src/common/fromEntriesTyped.ts", "../src/common/extractProperties.ts", "../src/server/requestHandler/getNavionicsIcon.ts", "../src/server/utils/navionicsQueue.ts", "../src/server/requestHandler/getNavionicsObjectinfo.ts", "../src/common/math.ts", "../src/common/x2lon.ts", "../src/common/y2lat.ts", "../src/server/requestHandler/getNavionicsQuickinfo.ts", "../src/server/requestHandler/getTile.ts", "../src/common/modulo.ts", "../src/common/layers.ts", "../src/server/utils/xyz2quadkey.ts", "../src/server/urls/default.ts", "../src/server/utils/getTileParams.ts", "../src/server/utils/worthit.ts", "../src/server/urls/bingsat.ts", "../src/server/urls/gebco.ts", "../src/server/urls/googlehybrid.ts", "../src/server/urls/googlesat.ts", "../src/server/urls/googlestreet.ts", "../src/server/urls/navionics.ts", "../src/server/urls/openseamap.ts", "../src/server/urls/opentopomap.ts", "../src/server/urls/osm.ts", "../src/server/urls/vfdensity.ts", "../src/server/urls/worthit.ts", "../src/client/globals/tileSize.ts", "../src/server/utils/getXYZ2Url.ts", "../src/server/utils/printStats.ts"],
  "sourcesContent": ["import { StyQueue } from '@mc-styrsky/queue';\nimport express from 'express';\nimport { port } from '../common/consts';\nimport { getNavionicsIcon } from './requestHandler/getNavionicsIcon';\nimport { getNavionicsObjectinfo } from './requestHandler/getNavionicsObjectinfo';\nimport { getNavionicsQuickinfo } from './requestHandler/getNavionicsQuickinfo';\nimport { getTile } from './requestHandler/getTile';\nimport { printStats } from './utils/printStats';\n\nexport const pwd = '/home/sty/Documents/GitHub/mapsmirror';\n\nexport const queues = {\n  checked: 0,\n  childs: {} as Record<string, StyQueue>,\n  childsCollapsed: {} as Record<string, number>,\n  fetch: new StyQueue(10),\n  fetched: 0,\n  quiet: new StyQueue(1000),\n  stats: 0,\n  statsCount: 0,\n  verbose: new StyQueue(100),\n  worthit: 0,\n  worthitCount: 0,\n};\n\nexpress()\n.use(express.json())\n.use(express.urlencoded({ extended: false }))\n.use('', express.static('public'))\n.get('/tile/:source/:z/:x/:y', getTile)\n.get('/navionics/icon/:iconId', getNavionicsIcon)\n.get('/navionics/quickinfo/:z/:x/:y', getNavionicsQuickinfo)\n.get('/navionics/objectinfo/:itemId', getNavionicsObjectinfo)\n.listen(port, () => console.log(`backend listener running on port ${port}`))\n.on('error', (e) => {\n  console.error(`cannot start listener on port ${port}`);\n  console.log(e);\n});\n\nsetInterval(printStats, 2000);\n", "export const port = 3000;\n", "export function fromEntriesTyped<K extends string, T = any> (entries: Iterable<readonly [K, T]>): Record<K, T> {\n  return Object.fromEntries(entries) as Record<K, T>;\n}\n\nexport function entriesTyped<K extends string, T> (o: Record<K, T>): [K, T][] {\n  return Object.entries(o) as [K, T][];\n}\n", "import { entriesTyped } from './fromEntriesTyped';\n\nexport function castObject<T extends object> (\n  obj: any,\n  transformer: { [P in keyof T]: (val?: unknown) => T[P] },\n): T {\n  const objSave = Object(obj) as object;\n  return entriesTyped(transformer).reduce((ret, entry) => {\n    const [key, constructor] = entry;\n    ret[key] = constructor(objSave[key]);\n    return ret;\n  }, {} as T);\n}\n", "import type express from 'express';\nimport { castObject } from '../../common/extractProperties';\n\nconst iconCache = new Map<string, Buffer>();\n\nexport const getNavionicsIcon = (\n  req: express.Request<{\n    iconId: string;\n  }, any, any, Record<string, any>, Record<string, any>>,\n  res: express.Response | null,\n) => {\n  const { iconId } = castObject(req.params, {\n    iconId: String,\n  });\n  try {\n    const fromCache = iconCache.get(iconId);\n    if (fromCache) {\n      console.log('[cached]', iconId);\n      res?.send(fromCache);\n    }\n    else {\n      fetch(`https://webapp.navionics.com/api/v2/assets/images/${iconId}`)\n      .then(\n        async r => {\n          if (r.ok) {\n            const toCache = Buffer.from(await r.arrayBuffer());\n            iconCache.set(iconId, toCache);\n            res?.send(toCache);\n          }\n          else res?.sendStatus(r.status);\n        },\n        () => {\n          res?.sendStatus(500);\n        },\n      );\n    }\n  }\n  catch (e) {\n    console.error(e);\n    res?.status(500).send('internal server error');\n    return;\n  }\n};\n", "import { StyQueue } from '@mc-styrsky/queue';\n\n\nexport const navionicsQueue = new StyQueue(10);\n", "import type express from 'express';\nimport { castObject } from '../../common/extractProperties';\nimport { navionicsQueue } from '../utils/navionicsQueue';\n\nconst objectinfoCache = new Map<string, Record<string, any>>();\nexport const getNavionicsObjectinfo = (\n  req: express.Request<{\n    itemId: string;\n  }, any, any, Record<string, any>, Record<string, any>>,\n  res: express.Response,\n) => {\n  void navionicsQueue.enqueue(() => {\n    try {\n      const { itemId } = castObject(req.params, {\n        itemId: String,\n      });\n      const fromCache = objectinfoCache.get(itemId);\n      if (fromCache) {\n        console.log('[cached]', itemId);\n        res.json(fromCache);\n      }\n      else {\n        console.log('[fetch] ', itemId);\n        fetch(`https://webapp.navionics.com/api/v2/objectinfo/marine/${itemId}`)\n        .then(\n          async r => {\n            if (r.ok) {\n              const toCache = await r.json() as Record<string, any>;\n              objectinfoCache.set(itemId, toCache) as Record<string, any>;\n              res.json(toCache);\n            }\n            else res.sendStatus(r.status);\n          },\n          () => {\n            res.sendStatus(500);\n          },\n        );\n      }\n    }\n    catch (e) {\n      console.error(e);\n      res.status(500).send('internal server error');\n      return;\n    }\n  });\n};\n", "export const { abs, acos, asin, asinh, atan2, ceil, cos, floor, log2, log10, max, min, PI, pow, round, sin, sqrt, tan, tanh } = Math;\n\nexport const PI2 = 2 * PI;\nexport const piHalf = PI / 2;\n\nexport function frac (x: number) {\n  return x - floor(x);\n}\n", "import { PI } from './math';\n\nexport function x2lonCommon (x: number, tiles: number) {\n  return (x / tiles - 0.5) * PI * 2;\n}\n", "import { PI, asin, tanh } from './math';\n\nexport function y2latCommon (y: number, tiles: number) {\n  return asin(tanh((0.5 - y / tiles) * 2 * PI));\n}\n", "import type express from 'express';\nimport { castObject } from '../../common/extractProperties';\nimport { PI, max, min } from '../../common/math';\nimport { x2lonCommon } from '../../common/x2lon';\nimport { y2latCommon } from '../../common/y2lat';\nimport { navionicsQueue } from '../utils/navionicsQueue';\n\nconst quickinfoCache = new Map<string, Record<string, any>>();\n\nexport const getNavionicsQuickinfo = (\n  req: express.Request<{\n    x: number,\n    y: number,\n    z: string\n  }, any, any, Record<string, any>, Record<string, any>>,\n  res: express.Response | null,\n) => {\n  void navionicsQueue.enqueue(() => {\n    const { x, y, z } = castObject(req.params, {\n      x: Number,\n      y: Number,\n      z: Number,\n    });\n    try {\n      const { lat, lon } = {\n        lat: y2latCommon(y, 1 << z) * 180 / PI,\n        lon: x2lonCommon(x, 1 << z) * 180 / PI,\n      };\n      const xyz = `${z}_${x}_${y}`;\n      const fromCache = quickinfoCache.get(xyz);\n      if (fromCache) {\n        console.log('[cached]', xyz);\n        res?.json(fromCache);\n      }\n      else {\n        console.log('[fetch] ', xyz);\n\n        fetch(`https://webapp.navionics.com/api/v2/quickinfo/marine/${lat}/${lon}?z=${max(2, min(Number(z), 17))}&ugc=true&lang=en`)\n        .then(\n          async r => {\n            if (r.ok) {\n              const toCache = await r.json() as Record<string, any>;\n              quickinfoCache.set(xyz, toCache);\n              res?.json(toCache);\n            }\n            else res?.sendStatus(r.status);\n          },\n          () => {\n            res?.sendStatus(500);\n          },\n        );\n      }\n    }\n    catch (e) {\n      console.error(e);\n      res?.status(500).send('internal server error');\n      return;\n    }\n  });\n};\n", "import type { Layer } from '../../common/types/layer';\nimport type express from 'express';\nimport { StyQueue } from '@mc-styrsky/queue';\nimport { castObject } from '../../common/extractProperties';\nimport { modulo } from '../../common/modulo';\nimport { queues } from '../index';\nimport { getXYZ2Url } from '../utils/getXYZ2Url';\nimport { getMaxzoom, setMaxzoom } from '../utils/printStats';\n\ninterface TileParams { ttl: number, source: Layer; x: number; y: number; z: number; }\n\nexport const getTile = (\n  req: express.Request<any, any, any, Record<string, any>, Record<string, any>>,\n  res: express.Response,\n) => {\n  try {\n    const { z } = castObject(req.params, {\n      z: val => parseInt(String(val)),\n    });\n    if (z > getMaxzoom()) setMaxzoom(z);\n    const parsePosition = (val: any) => {\n      return modulo(parseInt(String(val), 16), 1 << z);\n    };\n    const { source, x, y } = castObject(req.params, {\n      source: (val: any) => String(val) as Layer,\n      x: parsePosition,\n      y: parsePosition,\n    });\n    const { ttl } = castObject(req.query, {\n      ttl: val => parseInt(String(val ?? 3)),\n    });\n\n    void fetchTile({ source, ttl, x, y, z }, res)\n    .catch(e => {\n      console.error(e);\n      if (!res.headersSent) res.sendStatus(500);\n    });\n  }\n  catch (e) {\n    console.error(e);\n    res.sendStatus(500);\n  }\n};\n\nasync function fetchTile (\n  { source, ttl, x, y, z }: TileParams,\n  res: express.Response | null = null,\n) {\n  const queue = res ? queues.verbose : queues.quiet;\n  await queue.enqueue(async () => {\n    try {\n      return await getXYZ2Url({ provider: source, x, y, z }).sendTile(res);\n    }\n    catch (e) {\n      console.log(e);\n      return false;\n    }\n  })\n  .then(childs => {\n    if (res) console.log('tile', { provider: source, x, y, z });\n    queues.checked++;\n    if (childs && ttl > 0 && z < 16) void fetchChilds({ source, ttl, x, y, z });\n  });\n}\n\nasync function fetchChildTile ({ dx, dy, source: provider, ttl, x, y, z }: { dx: number; dy: number} & TileParams) {\n  await fetchTile({\n    source: provider,\n    ttl: ttl - 1,\n    x: x * 2 + dx,\n    y: y * 2 + dy,\n    z: z + 1,\n  })\n  .catch(e => console.log(e));\n}\nasync function fetchChilds ({ source: provider, ttl, x, y, z }: TileParams) {\n  queues.childsCollapsed[z] ??= 0;\n  queues.childs[z] ??= new StyQueue(1000);\n  const queue = queues.childs[z];\n  queues.childsCollapsed[z]++;\n  while (queue.length > 100) await (queues.childs[z - 1] ??= new StyQueue(1000)).enqueue(() => new Promise(r => setTimeout(r, queue.length / 1)));\n  queues.childsCollapsed[z]--;\n  void queue.enqueue(() => fetchChildTile({ dx: 0, dy: 0, source: provider, ttl, x, y, z: z }));\n  void queue.enqueue(() => fetchChildTile({ dx: 0, dy: 1, source: provider, ttl, x, y, z: z }));\n  void queue.enqueue(() => fetchChildTile({ dx: 1, dy: 0, source: provider, ttl, x, y, z: z }));\n  void queue.enqueue(() => fetchChildTile({ dx: 1, dy: 1, source: provider, ttl, x, y, z: z }));\n}\n", "export function modulo (val: number, mod: number) {\n  const ret = val % mod;\n  return ret < 0 ? ret + mod : ret;\n}\n", "import type { Layer } from './types/layer';\nimport { entriesTyped } from './fromEntriesTyped';\n\nexport const zoomMax = 20;\nexport const zoomMin = 2;\n\nconst min = zoomMin;\nconst max = zoomMax;\n\nexport class Layers {\n  static get (layer: Layer): {min: number, max: number, label: string} {\n    return {\n      '': { label: '- none -', max, min },\n      bingsat: { label: 'bSat', max, min },\n      gebco: { label: 'Depth', max: 9, min },\n      googlehybrid: { label: 'gHybrid', max, min },\n      googlesat: { label: 'gSat', max, min },\n      googlestreet: { label: 'gStreet', max, min },\n      navionics: { label: 'Navionics', max: 17, min },\n      openseamap: { label: 'oSea', max: 18, min },\n      opentopomap: { label: 'oTopo', max: 17, min },\n      osm: { label: 'oStreet', max: 19, min },\n      vfdensity: { label: 'Density', max: 12, min: 3 },\n      worthit: { label: 'Worthit', max, min },\n    }[layer] ?? { label: 'unknown provider', max: zoomMax, min: zoomMin };\n  }\n}\n\nconsole.log('Layers', entriesTyped(Layers));\n", "import type { XYZ } from '../../common/types/xyz';\n\nexport const xyz2quadkey = ({ x, y, z }: XYZ) => {\n  return (parseInt(y.toString(2), 4) * 2 + parseInt(x.toString(2), 4)).toString(4).padStart(z, '0');\n};\n", "import type { Layer } from '../../common/types/layer';\nimport type { XYZ } from '../../common/types/xyz';\nimport type express from 'express';\nimport { mkdir, stat, unlink, writeFile } from 'fs/promises';\nimport { pwd, queues } from '../index';\nimport { getTileParams } from '../utils/getTileParams';\nimport { getXYZ2Url } from '../utils/getXYZ2Url';\nimport { worthItMinMax } from '../utils/worthit';\n\nexport class XYZ2Url {\n  constructor ({ provider, x, y, z }: XYZ & {\n    provider: Layer\n  }) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.provider = provider;\n    this.fallback = null;\n  }\n  readonly provider: Layer;\n  fallback: null | Layer;\n  local = false;\n  params: PromiseLike<RequestInit> | RequestInit = {};\n  url: PromiseLike<string> | string = '';\n  worthIt = async ({ x, y, z }: XYZ) => {\n    const res = await worthItMinMax({ x, y, z });\n    if (!res) return false;\n    const { max, min } = res;\n    if (z <= 6) return min < 132;\n    if (z <= 10) return max > 1 && min < 132;\n    return max > 96 && min < 144 && (max < 132 || max - min > 3);\n  };\n  worthItArea = async ({ x, y, z }: XYZ) => {\n    return (await Promise.all([\n      this.worthIt({ x: x, y: y, z }),\n      this.worthIt({ x: x, y: y - 1, z }),\n      this.worthIt({ x: x, y: y + 1, z }),\n      this.worthIt({ x: x - 1, y: y, z }),\n      this.worthIt({ x: x - 1, y: y - 1, z }),\n      this.worthIt({ x: x - 1, y: y + 1, z }),\n      this.worthIt({ x: x + 1, y: y, z }),\n      this.worthIt({ x: x + 1, y: y - 1, z }),\n      this.worthIt({ x: x + 1, y: y + 1, z }),\n    ])).some(Boolean);\n  };\n  readonly x: number;\n  readonly y: number;\n  readonly z: number;\n\n  fetchFromTileServer = async (): Promise<{\n    body: ArrayBuffer | null\n    status: number;\n  }> => {\n    const { url, x, y, z } = this;\n    return fetch(await url, await this.params)\n    .then(async (response) => {\n      queues.fetched++;\n      if (response.status === 200) return {\n        body: await response.arrayBuffer(),\n        status: response.status,\n      };\n      if (response.status === 404) {\n        if (this.fallback) {\n          const fallback = getXYZ2Url({\n            provider: this.fallback,\n            x,\n            y,\n            z,\n          });\n          console.log('fallback to', this.fallback, await fallback.url);\n          return fallback.fetchFromTileServer();\n        }\n        return {\n          body: null,\n          status: response.status,\n        };\n      }\n      console.log(response.status, response.statusText, url);\n      return {\n        body: null,\n        status: response.status,\n      };\n    })\n    .catch(() => {\n      return {\n        body: null,\n        status: 500,\n      };\n    });\n  };\n\n\n  sendTile = async (res: express.Response | null,\n  ): Promise<boolean> => {\n    const url = await this.url;\n    const params = await this.params;\n    const { x, y, z } = this;\n    const max = 1 << z;\n\n    if (!url) {\n      res?.sendStatus(404);\n      return false;\n    }\n\n    const { tileFileId, tilePath } = getTileParams({ x, y, z });\n\n    const file = `${tileFileId}.png`;\n    const path = `tiles/${this.provider}/${z.toString(36)}/${tilePath}`;\n    await mkdir(path, { recursive: true });\n    const filename = `${pwd}/${path}/${file}`;\n\n    const statsStart = performance.now();\n    const fileStats = await stat(filename)\n    .then(async (stats) => {\n      if (!stats.isFile()) return null;\n      if (this.provider === 'googlesat' && stats.size < 100) {\n        await unlink(filename);\n        return null;\n      }\n      return stats;\n    })\n    .catch(() => null);\n    queues.stats = performance.now() - statsStart;\n    queues.statsCount++;\n\n    if (fileStats) {\n      // if (this.verbose) console.log('[cached]', filename);\n      res?.sendFile(filename);\n      return true;\n    }\n    if (this.local) {\n      res?.sendStatus(404);\n      return false;\n    }\n    const worthitStart = performance.now();\n    if (res ?? await this.worthItArea({ x: x, y: y, z })) {\n      const imageStream = await queues.fetch.enqueue(async () => {\n        const timeoutController = new globalThis.AbortController();\n        const timeoutTimeout = setTimeout(() => timeoutController.abort(), 10000);\n        params.signal = timeoutController.signal;\n        const ret = await this.fetchFromTileServer();\n        clearTimeout(timeoutTimeout);\n        return ret;\n      });\n\n      if (imageStream.body) {\n        if (res) console.log('[fetched]', filename);\n        res?.send(Buffer.from(imageStream.body));\n        await writeFile(filename, Buffer.from(imageStream.body));\n        return true;\n      }\n\n      console.log('no imagestream', imageStream.status, { x: (x / max).toFixed(4), y: (y / max).toFixed(4), z }, url);\n      res?.sendStatus(imageStream.status ?? 500);\n      return false;\n    }\n    queues.worthit += performance.now() - worthitStart;\n    queues.worthitCount++;\n\n    return false;\n  };\n}\n", "import { modulo } from '../../common/modulo';\n\nexport const getTileParams = ({ x, y, z }: { x: number; y: number; z: number; }) => {\n  const length = z + 3 >> 2;\n  const pathX = modulo(x, 1 << z).toString(16).padStart(length, '0').split('');\n  const pathY = modulo(y, 1 << z).toString(16).padStart(length, '0').split('');\n\n\n  const tileFileId = `${pathX.pop()}${pathY.pop()}`;\n  const tilePath = pathX.map((_val, idx) => pathX[idx] + pathY[idx]).join('/');\n  const tileId = `${tilePath}/${tileFileId}`;\n  return {\n    tileFileId,\n    tileId,\n    tilePath,\n    z,\n  };\n};\n", "import type { XYZ } from '../../common/types/xyz';\nimport sharp from 'sharp';\nimport { getTileParams } from './getTileParams';\n\nconst worthItDatabase: {\n  min: Record<string, Record<string, Record<string, Buffer>>>,\n  max: Record<string, Record<string, Record<string, Buffer>>>,\n} = {\n  max: {},\n  min: {},\n};\n\nconst populateDatabase = (z: number, base: Buffer, func: 'min' | 'max') => {\n  ((worthItDatabase[func][z] ??= {})[0] ??= {})[0] = base;\n  if (z < -8) return;\n  const cmp = Math[func];\n  const nextBase = Buffer.alloc(256 * 256, 0);\n  for (let x = 0; x < 128; x++) {\n    for (let y = 0; y < 128; y++) {\n      nextBase[y * 256 + x] = cmp(\n        base[y * 2 * 256 + x * 2],\n        base[(y * 2 + 1) * 256 + x * 2],\n        base[y * 2 * 256 + (x * 2 + 1)],\n        base[(y * 2 + 1) * 256 + (x * 2 + 1)],\n      );\n    }\n  }\n  populateDatabase(z - 1, nextBase, func);\n};\n\npopulateDatabase(0, await sharp('tiles/gebcomax/0/00.png').greyscale().toFormat('raw').toBuffer(), 'max');\n\npopulateDatabase(0, await sharp('tiles/gebcomin/0/00.png').greyscale().toFormat('raw').toBuffer(), 'min');\n\nconsole.log(worthItDatabase);\n\nexport const worthItMinMax = async ({ x, y, z }: XYZ): Promise<{ min: number; max: number; } | null> => {\n  while (x < 0) x += 1 << z;\n  while (y < 0) y += 1 << z;\n  if (z > 17) {\n    x = x >> z - 17;\n    y = y >> z - 17;\n    z = 17;\n  }\n  if (y >= (1 << z) / 4 * 3) return null;\n  const z8 = z - 8;\n  const x8 = x >> 8;\n  const y8 = y >> 8;\n  const tileMax = worthItDatabase.max[z8]?.[x8]?.[y8];\n  const tileMin = worthItDatabase.min[z8]?.[x8]?.[y8];\n\n  if (tileMin && tileMax) {\n    const pos = (x & 0xff) + (y & 0xff) * 256;\n    const max = tileMax[pos];\n    const min = tileMin[pos];\n    return { max, min };\n  }\n\n  const { tileId } = getTileParams({ x: x8, y: y8, z: z8 });\n\n  if (z8 < 0) console.log({ tileId, x, x8, y, y8, z, z8 });\n  const path = `${z8.toString(36)}/${tileId}`;\n  ((worthItDatabase.max[z8] ??= {})[x8] ??= {})[y8] = await sharp(`tiles/gebcomax/${path}.png`).greyscale().toFormat('raw').toBuffer();\n  ((worthItDatabase.min[z8] ??= {})[x8] ??= {})[y8] = await sharp(`tiles/gebcomin/${path}.png`).greyscale().toFormat('raw').toBuffer();\n  return worthItMinMax({ x, y, z });\n};\n", "import type { ConstructorParameters } from '../../common/types/constructorParameters';\nimport { Layers } from '../../common/layers';\nimport { xyz2quadkey } from '../utils/xyz2quadkey';\nimport { XYZ2Url } from './default';\n\nexport class XYZ2UrlBingsat extends XYZ2Url {\n  constructor (params: ConstructorParameters<typeof XYZ2Url>[0]) {\n    super(params);\n    const { x, y, z } = params;\n    const { max, min } = Layers.get(params.provider);\n    if (z >= min && z <= max) this.url = `https://t.ssl.ak.tiles.virtualearth.net/tiles/a${xyz2quadkey({ x, y, z })}.jpeg?g=14041&n=z&prx=1`;\n  }\n}\n", "import type { ConstructorParameters } from '../../common/types/constructorParameters';\nimport { Layers } from '../../common/layers';\nimport { XYZ2Url } from './default';\n\nexport class XYZ2UrlGebco extends XYZ2Url {\n  constructor (params: ConstructorParameters<typeof XYZ2Url>[0]) {\n    super(params);\n    const { x, y, z } = params;\n    this.local = true;\n    const { max, min } = Layers.get(params.provider);\n    if (z >= min && z <= max) this.url = `./gebco/tiles/${z}/${x}/${y}.png`;\n  }\n}\n", "import type { ConstructorParameters } from '../../common/types/constructorParameters';\nimport { Layers } from '../../common/layers';\nimport { XYZ2Url } from './default';\n\nexport class XYZ2UrlGooglehybrid extends XYZ2Url {\n  constructor (params: ConstructorParameters<typeof XYZ2Url>[0]) {\n    super(params);\n    const { x, y, z } = params;\n    const { max, min } = Layers.get(params.provider);\n    if (z >= min && z <= max) this.url = `https://mt.google.com/vt/lyrs=y&x=${x}&y=${y}&z=${z}`;\n  }\n}\n", "import type { ConstructorParameters } from '../../common/types/constructorParameters';\nimport { Layers } from '../../common/layers';\nimport { XYZ2Url } from './default';\n\nexport class XYZ2UrlGooglesat extends XYZ2Url {\n  constructor (params: ConstructorParameters<typeof XYZ2Url>[0]) {\n    super(params);\n    const { x, y, z } = params;\n    this.fallback = 'googlehybrid';\n    const { max, min } = Layers.get(params.provider);\n    if (z >= min && z <= max) this.url = `https://mt.google.com/vt/lyrs=s&x=${x}&y=${y}&z=${z}`;\n  }\n}\n", "import type { ConstructorParameters } from '../../common/types/constructorParameters';\nimport { Layers } from '../../common/layers';\nimport { XYZ2Url } from './default';\n\nexport class XYZ2UrlGooglestreet extends XYZ2Url {\n  constructor (params: ConstructorParameters<typeof XYZ2Url>[0]) {\n    super(params);\n    const { x, y, z } = params;\n    const { max, min } = Layers.get(params.provider);\n    if (z >= min && z <= max) this.url = `https://mt.google.com/vt/lyrs=m&x=${x}&y=${y}&z=${z}`;\n  }\n}\n", "import type { ConstructorParameters } from '../../common/types/constructorParameters';\nimport { Layers } from '../../common/layers';\nimport { XYZ2Url } from './default';\n\nlet navtoken: null | string = null;\n\nsetInterval(() => navtoken = null, 10 * 60 * 1000);\n\nconst getNavtoken = async () => {\n  try {\n    navtoken ??= await fetch('https://backend.navionics.com/tile/get_key/NAVIONICS_WEBAPP_P01/webapp.navionics.com?_=1699259111356', {\n      credentials: 'omit',\n      headers: {\n        Accept: 'text/plain, */*; q=0.01',\n        'Accept-Language': 'de,de-DE;q=0.8,en-US;q=0.5,en;q=0.3',\n        'Cache-Control': 'no-cache',\n        Pragma: 'no-cache',\n        'Sec-Fetch-Dest': 'empty',\n        'Sec-Fetch-Mode': 'cors',\n        'Sec-Fetch-Site': 'same-site',\n        'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0',\n      },\n      method: 'GET',\n      mode: 'cors',\n      referrer: 'https://webapp.navionics.com/',\n    }).then(res => {\n      if (res.status === 200) return res.text();\n      return null;\n    })\n    .catch(() => null);\n  }\n  catch {\n    navtoken = null;\n  }\n  return navtoken;\n};\n\nexport class XYZ2UrlNavionics extends XYZ2Url {\n  constructor (params: ConstructorParameters<typeof XYZ2Url>[0]) {\n    super(params);\n    const { x, y, z } = params;\n    const { max, min } = Layers.get(params.provider);\n    if ([\n      z >= min && z <= max,\n      z >= 5 && y >= 14922 >> 17 - z,\n      z >= 5 && y <= 92442 >> 17 - z,\n    ].every(Boolean)) {\n      this.url = getNavtoken().then(token => token ?\n        `https://backend.navionics.com/tile/${z}/${x}/${y}?LAYERS=config_1_0.00_0&TRANSPARENT=TRUE&UGC=TRUE&theme=0&navtoken=${token}` :\n        '',\n      );\n      this.params = getNavtoken().then(token => token ?\n        {\n          credentials: 'omit',\n          headers: {\n            Accept: 'image/avif,image/webp,*/*',\n            'Accept-Language': 'de,de-DE;q=0.8,en-US;q=0.5,en;q=0.3',\n            'Sec-Fetch-Dest': 'image',\n            'Sec-Fetch-Mode': 'cors',\n            'Sec-Fetch-Site': 'same-site',\n            'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0',\n          },\n          method: 'GET',\n          mode: 'cors',\n          referrer: 'https://webapp.navionics.com/',\n        } :\n        {},\n      );\n    }\n  }\n}\n", "import type { ConstructorParameters } from '../../common/types/constructorParameters';\nimport { Layers } from '../../common/layers';\nimport { XYZ2Url } from './default';\n\nexport class XYZ2UrlOpenseamap extends XYZ2Url {\n  constructor (params: ConstructorParameters<typeof XYZ2Url>[0]) {\n    super(params);\n    const { x, y, z } = params;\n    const { max, min } = Layers.get(params.provider);\n    if (z >= min && z <= max) this.url = `https://tiles.openseamap.org/seamark/${z}/${x}/${y}.png`;\n  }\n}\n", "import type { ConstructorParameters } from '../../common/types/constructorParameters';\nimport { Layers } from '../../common/layers';\nimport { XYZ2Url } from './default';\n\nexport class XYZ2UrlOpentopomap extends XYZ2Url {\n  constructor (params: ConstructorParameters<typeof XYZ2Url>[0]) {\n    super(params);\n    const { x, y, z } = params;\n    const { max, min } = Layers.get(params.provider);\n    if (z >= min && z <= max) this.url = `https://tile.opentopomap.org/${z}/${x}/${y}.png`;\n  }\n}\n", "import type { ConstructorParameters } from '../../common/types/constructorParameters';\nimport { Layers } from '../../common/layers';\nimport { XYZ2Url } from './default';\n\nexport class XYZ2UrlOsm extends XYZ2Url {\n  constructor (params: ConstructorParameters<typeof XYZ2Url>[0]) {\n    super(params);\n    const { x, y, z } = params;\n    const { max, min } = Layers.get(params.provider);\n    if (z >= min && z <= max) this.url = `https://tile.openstreetmap.org/${z}/${x}/${y}.png`;\n  }\n}\n", "import type { ConstructorParameters } from '../../common/types/constructorParameters';\nimport { Layers } from '../../common/layers';\nimport { XYZ2Url } from './default';\n\nexport class XYZ2UrlVfdensity extends XYZ2Url {\n  constructor (params: ConstructorParameters<typeof XYZ2Url>[0]) {\n    super(params);\n    const { x, y, z } = params;\n    const { max, min } = Layers.get(params.provider);\n    if (z >= min && z <= max) this.url = `https://density.tiles.vesselfinder.net/all/${z}/${x}/${y}.png`;\n  }\n}\n", "import type { ConstructorParameters } from '../../common/types/constructorParameters';\nimport sharp from 'sharp';\nimport { tileSize } from '../../client/globals/tileSize';\nimport { Layers } from '../../common/layers';\nimport { min } from '../../common/math';\nimport { XYZ2Url } from './default';\n\nexport class XYZ2UrlWorthit extends XYZ2Url {\n  constructor (params: ConstructorParameters<typeof XYZ2Url>[0]) {\n    super(params);\n    const { x, y, z } = this;\n    const { max, min } = Layers.get(params.provider);\n    if (z >= min && z <= max) this.url = `./worthit/tiles/${z}/${x}/${y}.png`;\n  }\n  fetchFromTileServer = async () => {\n    const { x, y, z } = this;\n    const tile = new Uint8Array(3 * tileSize * tileSize);\n    for (let zi = 0; zi <= 8; zi++) {\n      const color = zi > 4 ?\n        [0, min(0x20 << zi - 4, 0xff), 0] :\n        zi > 0 ?\n          [0, 0, min(0x20 << zi - 1, 0xff)] :\n          [min(0x40 << zi, 0xff), 0, 0];\n      for (let yi = 0; yi < 1 << zi; yi++) {\n        const yiOffset = yi << 8 - zi;\n        for (let xi = 0; xi < 1 << zi; xi++) {\n          const xiOffset = xi << 8 - zi;\n          const [cr, cg, cb] = await this.worthItArea({\n            x: (x << zi) + xi,\n            y: (y << zi) + yi,\n            z: z + zi,\n          }) ? color : [0, 0];\n          if (cr || cg || cb) {\n            for (let row = 0; row < 1 << 8 - zi; row++) {\n              for (let col = 0; col < 1 << 8 - zi; col++) {\n                const pos = ((yiOffset + row) * 256 + (xiOffset + col)) * 3;\n                tile[pos] = cr;\n                tile[pos + 1] = cg;\n                tile[pos + 2] = cb;\n              }\n            }\n          }\n        }\n      }\n    }\n    const body = await sharp(tile, {\n      raw: {\n        channels: 3,\n        height: 256,\n        width: 256,\n      },\n    })\n    .png()\n    .toBuffer();\n    return {\n      body,\n      status: 200,\n    };\n  };\n}\n", "\nexport const tileSize = 256;\n", "import { XYZ2UrlBingsat } from '../urls/bingsat';\nimport { XYZ2Url } from '../urls/default';\nimport { XYZ2UrlGebco } from '../urls/gebco';\nimport { XYZ2UrlGooglehybrid } from '../urls/googlehybrid';\nimport { XYZ2UrlGooglesat } from '../urls/googlesat';\nimport { XYZ2UrlGooglestreet } from '../urls/googlestreet';\nimport { XYZ2UrlNavionics } from '../urls/navionics';\nimport { XYZ2UrlOpenseamap } from '../urls/openseamap';\nimport { XYZ2UrlOpentopomap } from '../urls/opentopomap';\nimport { XYZ2UrlOsm } from '../urls/osm';\nimport { XYZ2UrlVfdensity } from '../urls/vfdensity';\nimport { XYZ2UrlWorthit } from '../urls/worthit';\n\n\nexport function getXYZ2Url (params: ConstructorParameters<typeof XYZ2Url>[0]): XYZ2Url {\n  switch (params.provider) {\n    case 'bingsat': return new XYZ2UrlBingsat(params);\n    case 'gebco': return new XYZ2UrlGebco(params);\n    case 'googlehybrid': return new XYZ2UrlGooglehybrid(params);\n    case 'googlesat': return new XYZ2UrlGooglesat(params);\n    case 'googlestreet': return new XYZ2UrlGooglestreet(params);\n    case 'navionics': return new XYZ2UrlNavionics(params);\n    case 'openseamap': return new XYZ2UrlOpenseamap(params);\n    case 'opentopomap': return new XYZ2UrlOpentopomap(params);\n    case 'osm': return new XYZ2UrlOsm(params);\n    case 'vfdensity': return new XYZ2UrlVfdensity(params);\n    case 'worthit': return new XYZ2UrlWorthit(params);\n  }\n  return new XYZ2Url(params);\n}\n", "import { queues } from '..';\nimport { pow, round } from '../../common/math';\n\nlet todoLast = 0;\nlet fetchedLast = 0;\nlet maxzoom = -1;\n\nexport const getMaxzoom = () => maxzoom;\nexport const setMaxzoom = (z: number) => maxzoom = z;\n\nexport const printStats = () => {\n  if (!queues.statsCount && !queues.worthitCount && maxzoom < 0 && !queues.checked) return;\n  const partialSum = (n: number) => (1 - pow(4, n)) / (1 - 4);\n  const todo = Object.entries(queues.childs).reduce(\n    (sum, [key, queue]) => {\n      const len = queue.length;\n      const collapsed = queues.childsCollapsed[key] ?? 0;\n      sum += round(collapsed * partialSum(maxzoom - parseInt(key)));\n      sum += round(len * partialSum(maxzoom - 1 - parseInt(key)));\n      return sum;\n    }, 0);\n  const done = todoLast - todo;\n  todoLast = todo;\n  console.log({\n    avg: { stats: queues.stats / queues.statsCount, worthit: queues.worthit / queues.worthitCount },\n    childs: Object.fromEntries(\n      Object.entries(queues.childs)\n      .filter(([, v]) => v?.length)\n      .map(([key, queue]) => [key, `${queue.length} (${queues.childsCollapsed[key] ?? 0})`]),\n    ),\n    fetched: `${queues.fetched - fetchedLast}/${queues.checked} (${queues.fetched})`,\n    perf: {\n      done,\n      maxzoom,\n      todo: todo.toPrecision(4),\n    },\n    queues: {\n      fetch: queues.fetch.length,\n      quiet: queues.quiet.length,\n      verbose: queues.verbose.length,\n    },\n  });\n  fetchedLast = queues.fetched;\n  queues.checked = 0;\n  queues.stats = 0;\n  queues.statsCount = 0;\n  queues.worthit = 0;\n  queues.worthitCount = 0;\n  maxzoom = -1;\n};\n"],
  "mappings": "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",
  "names": ["StyQueue", "StyQueue", "min", "max", "max", "min", "max", "min", "max", "min", "max", "min", "max", "min", "max", "min", "max", "min", "max", "min", "max", "min", "max", "min", "max", "min", "max", "min", "sharp", "max", "min", "sharp", "StyQueue", "StyQueue"]
}
