{
  "version": 3,
  "sources": ["../src/server/index.ts", "../src/common/consts.ts", "../src/server/requestHandler/getTile.ts", "../src/common/extractProperties.ts", "../src/server/urls/cache.ts", "../src/server/urls/default.ts", "../src/server/urls/gebco.ts", "../src/server/urls/googlehybrid.ts", "../src/server/urls/googlesat.ts", "../src/server/urls/googlestreet.ts", "../src/server/urls/navionics.ts", "../src/server/urls/osm.ts", "../src/server/utils/fetchFromTileServer.ts", "../src/server/utils/getTileParams.ts", "../src/server/utils/worthit.ts"],
  "sourcesContent": ["import { StyQueue } from '@mc-styrsky/queue';\nimport express from 'express';\nimport { port } from '../common/consts';\nimport { getTile } from './requestHandler/getTile';\n\nexport const pwd = '/home/sty/Documents/GitHub/mapsmirror';\n\nexport const queues = {\n  childs: <Record<string, StyQueue>> {},\n  fetch: new StyQueue(10),\n  quiet: new StyQueue(100),\n  verbose: new StyQueue(10),\n};\n\nexpress()\n.use(express.json())\n.use(express.urlencoded({ extended: true }))\n.use('', express.static('public'))\n.get('/tile/:provider/:zoom/:x/:y', getTile)\n.listen(port, () => console.log(`backend listener running on port ${port}`))\n.on('error', (e) => {\n  console.error(`cannot start listener on port ${port}`);\n  console.log(e);\n});\n\nlet maxzoom = -1;\n\nexport const getMaxzoom = () => maxzoom;\nexport const setMaxzoom = (z: number) => maxzoom = z;\n\nsetInterval(() => {\n  console.log({\n    fetch: queues.fetch.length,\n    maxzoom,\n    quiet: queues.quiet.length,\n    todo: Object.entries(queues.childs).reduce(\n      (sum, [key, queue]) => {\n        const len = queue.length;\n        sum += Math.round(Math.max(0, len - 1000) * (\n          Math.pow(4, 15 - parseInt(key)) +\n          Math.pow(2, 14 - parseInt(key))\n        ));\n        sum += Math.round(Math.min(1000, len) * (1 << 15 - parseInt(key)));\n        return sum;\n      }, 0),\n    verbose: queues.verbose.length,\n    ...Object.fromEntries(\n      Object.entries(queues.childs)\n\n      .map(([key, queue]) => [key, queue.length])\n      .filter(([, v]) => v),\n    ),\n  });\n  maxzoom = -1;\n}, 2000);\n", "export const port = 3000;\n", "import type express from 'express';\nimport { StyQueue } from '@mc-styrsky/queue';\nimport { createWriteStream } from 'fs';\nimport { mkdir, stat, unlink } from 'fs/promises';\nimport { extractProperties } from '../../common/extractProperties';\nimport { getMaxzoom, pwd, queues, setMaxzoom } from '../index';\nimport { xyz2cache } from '../urls/cache';\nimport { xyz2default } from '../urls/default';\nimport { xyz2gebco } from '../urls/gebco';\nimport { xyz2googlehybrid } from '../urls/googlehybrid';\nimport { xyz2googlesat } from '../urls/googlesat';\nimport { xyz2googlestreet } from '../urls/googlestreet';\nimport { xyz2navionics } from '../urls/navionics';\nimport { xyz2osm } from '../urls/osm';\nimport { fetchFromTileServer } from '../utils/fetchFromTileServer';\nimport { getTileParams } from '../utils/getTileParams';\nimport { worthIt } from '../utils/worthit';\n\nexport const getTile = async (\n  req: express.Request<{\n    provider: string;\n    zoom: string;\n    x: string;\n    y: string;\n  }, any, any, Record<string, any>, Record<string, any>>,\n  res: express.Response | null,\n): Promise<boolean | null> => {\n  try {\n    const { zoom } = extractProperties(req.params, {\n      zoom: val => parseInt(String(val)),\n    });\n    if (zoom > getMaxzoom()) setMaxzoom(zoom);\n    const max = 1 << zoom;\n    const parsePosition = (val: any) => {\n      const ret = parseInt(String(val), 16) % max;\n      return ret < 0 ? ret + max : ret;\n    };\n    const { provider, x, y } = extractProperties(req.params, {\n      provider: String,\n      x: parsePosition,\n      y: parsePosition,\n    });\n    const { quiet, ttl } = extractProperties(req.query, {\n      quiet: val => Boolean(parseInt(String(val ?? 0))),\n      ttl: val => parseInt(String(val ?? 3)),\n    });\n\n    const queue = quiet ? queues.quiet : queues.verbose;\n    const fetchChilds = await queue.enqueue(async () => {\n      let ret: boolean | null = null;\n\n      const { local = false, params = {}, url = '' } = await ({\n        cache: xyz2cache,\n        gebco: xyz2gebco,\n        googlehybrid: xyz2googlehybrid,\n        googlesat: xyz2googlesat,\n        googlestreet: xyz2googlestreet,\n        navionics: xyz2navionics,\n        osm: xyz2osm,\n      }[provider] ?? xyz2default)(x, y, zoom);\n\n      if (!url) {\n        ret = false;\n        res?.sendStatus(404);\n        return ret;\n      }\n\n      const { tileFileId, tilePath } = getTileParams({ x, y, z: zoom });\n\n      if (!(await Promise.all([\n        local,\n        worthIt({ x: x, y: y, z: zoom }),\n        worthIt({ x: x, y: y - 1, z: zoom }),\n        worthIt({ x: x, y: y + 1, z: zoom }),\n        worthIt({ x: x - 1, y: y, z: zoom }),\n        worthIt({ x: x - 1, y: y - 1, z: zoom }),\n        worthIt({ x: x - 1, y: y + 1, z: zoom }),\n        worthIt({ x: x + 1, y: y, z: zoom }),\n        worthIt({ x: x + 1, y: y - 1, z: zoom }),\n        worthIt({ x: x + 1, y: y + 1, z: zoom }),\n      ])).some(Boolean)) {\n        res?.sendFile(`${pwd}/unworthy.png`);\n        ret = false;\n        // console.log('unworthy', { provider, x, y, zoom });\n        return ret;\n      }\n\n      const file = `${tileFileId}.png`;\n      const path = `tiles/${provider}/${zoom.toString(36)}/${tilePath}`;\n      await mkdir(path, { recursive: true });\n      const filename = `${pwd}/${path}/${file}`;\n\n      const fileStats = await stat(filename).catch(() => null);\n      if (fileStats && fileStats.isFile()) {\n        if (fileStats.size > 100) {\n          if (!quiet) console.log('[cached]', filename);\n          ret = true;\n          res?.sendFile(filename);\n        }\n        else {\n          ret = false;\n          if (provider === 'googlesat') {\n            await unlink(filename);\n            res?.redirect(`/tile/googlehybrid/${zoom}/${x.toString(16)}/${y.toString(16)}?ttl=${ttl}`);\n          }\n          else res?.sendStatus(404);\n        }\n      }\n      else if (local) {\n        ret = false;\n        res?.sendStatus(404);\n      }\n      else {\n        const timeoutController = new globalThis.AbortController();\n        const timeoutTimeout = setTimeout(() => timeoutController.abort(), 10000);\n\n        // console.log('[get]   ', { x: (x / max).toFixed(4), y: (y / max).toFixed(4), z: zoom }, url);\n        try {\n          params.signal = timeoutController.signal;\n          const imageStream = await queues.fetch.enqueue(() => fetchFromTileServer({ params, provider, url, x, y, z: zoom }));\n\n          if (imageStream.body) {\n            ret = true;\n            const writeImageStream = createWriteStream(filename);\n            writeImageStream.addListener('finish', () => {\n              if (quiet) res?.sendStatus(200);\n              else res?.sendFile(filename);\n            });\n            imageStream.body.pipe(writeImageStream);\n          }\n          else {\n            console.log('no imagestream', { x: (x / max).toFixed(4), y: (y / max).toFixed(4), z: zoom }, url);\n            res?.sendStatus(imageStream.status ?? 500);\n          }\n        }\n        catch (e) {\n          console.log(e);\n        }\n        clearTimeout(timeoutTimeout);\n      }\n      return ret;\n    });\n    if (fetchChilds && ttl > 0 && zoom < 22) {\n      const fetchTile = async (dx: number, dy: number) => {\n        try {\n          await getTile(\n            <any> {\n              params: {\n                provider,\n                x: (x * 2 + dx).toString(16),\n                y: (y * 2 + dy).toString(16),\n                zoom: String(zoom + 1),\n              },\n              query: {\n                quiet: '1',\n                ttl: String(ttl - 1),\n              },\n            },\n            null,\n          );\n        }\n        catch (e) {\n          console.log(e);\n        }\n      };\n\n      queues.childs[zoom] ??= new StyQueue(1000);\n      const childQueue = queues.childs[zoom];\n      await childQueue.enqueue(() => null);\n      childQueue.enqueue(() => fetchTile(0, 0));\n      childQueue.enqueue(() => fetchTile(0, 1));\n      childQueue.enqueue(() => fetchTile(1, 0));\n      childQueue.enqueue(() => fetchTile(1, 1));\n    }\n    return fetchChilds;\n  }\n  catch (e) {\n    console.error(e);\n    res?.status(500).send('internal server error');\n    return null;\n  }\n};\n", "export function extractProperties<T extends object> (\n  obj: Record<string, any>,\n  builder: { [P in keyof T]: (val?: any) => T[P] },\n): T {\n  return Object.entries(builder).reduce((ret, entry) => {\n    const [key, constructor]: [string, any] = entry;\n    ret[key] = constructor(obj[key]);\n    return ret;\n  }, {} as T);\n}\n", "import type { XYZ2Url } from './types';\n\nexport const xyz2cache: XYZ2Url = async (x, y, z) => {\n  if (z > 9) return {};\n  return {\n    local: true,\n    url: `./cache/tiles/${z}/${x}/${y}.png`,\n  };\n};\n", "import type { XYZ2Url } from './types';\n\nexport const xyz2default: XYZ2Url = async () => ({});\n", "import type { XYZ2Url } from './types';\n\nexport const xyz2gebco: XYZ2Url = async (x, y, z) => {\n  if (z > 9) return {};\n  return {\n    local: true,\n    url: `./gebco/tiles/${z}/${x}/${y}.png`,\n  };\n};\n", "import type { XYZ2Url } from './types';\n\nexport const xyz2googlehybrid: XYZ2Url = async (x, y, z) => {\n  if (z > 20) return {};\n  return {\n    url: `https://mt.google.com/vt/lyrs=y&x=${x}&y=${y}&z=${z}`,\n  };\n};\n", "import type { XYZ2Url } from './types';\n\nexport const xyz2googlesat: XYZ2Url = async (x, y, z) => {\n  if (z > 20) return {};\n  return {\n    url: `https://mt.google.com/vt/lyrs=s&x=${x}&y=${y}&z=${z}`,\n  };\n};\n", "import type { XYZ2Url } from './types';\n\nexport const xyz2googlestreet: XYZ2Url = async (x, y, z) => {\n  if (z > 20) return {};\n  return {\n    url: `https://mt.google.com/vt/lyrs=m&x=${x}&y=${y}&z=${z}`,\n  };\n};\n", "import type { XYZ2Url } from './types';\n\nlet navtoken: null | string = null;\n\nsetInterval(() => navtoken = null, 10 * 60 * 1000);\n\nconst getNavtoken = async () => {\n  navtoken ??= await fetch('https://backend.navionics.com/tile/get_key/NAVIONICS_WEBAPP_P01/webapp.navionics.com?_=1699259111356', {\n    credentials: 'omit',\n    headers: {\n      Accept: 'text/plain, */*; q=0.01',\n      'Accept-Language': 'de,de-DE;q=0.8,en-US;q=0.5,en;q=0.3',\n      'Cache-Control': 'no-cache',\n      Pragma: 'no-cache',\n      'Sec-Fetch-Dest': 'empty',\n      'Sec-Fetch-Mode': 'cors',\n      'Sec-Fetch-Site': 'same-site',\n      'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0',\n    },\n    method: 'GET',\n    mode: 'cors',\n    referrer: 'https://webapp.navionics.com/',\n  }).then(res => {\n    if (res.status === 200) return res.text();\n    return null;\n  });\n  return navtoken;\n};\n\nexport const xyz2navionics: XYZ2Url = async (x, y, z) => {\n  if (z > 17) return {};\n  if (await getNavtoken()) return {\n    params: {\n      credentials: 'omit',\n      headers: {\n        Accept: 'image/avif,image/webp,*/*',\n        'Accept-Language': 'de,de-DE;q=0.8,en-US;q=0.5,en;q=0.3',\n        'Sec-Fetch-Dest': 'image',\n        'Sec-Fetch-Mode': 'cors',\n        'Sec-Fetch-Site': 'same-site',\n        'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0',\n      },\n      method: 'GET',\n      mode: 'cors',\n      referrer: 'https://webapp.navionics.com/',\n    },\n    url: `https://backend.navionics.com/tile/${z}/${x}/${y}?LAYERS=config_1_20.00_0&TRANSPARENT=FALSE&UGC=TRUE&theme=0&navtoken=${await getNavtoken()}`,\n  };\n  return {};\n};\n", "import type { XYZ2Url } from './types';\n\nexport const xyz2osm: XYZ2Url = async (x, y, z) => {\n  if (z > 19) return {};\n  return {\n    url: `https://tile.openstreetmap.org/${z}/${x}/${y}.png`,\n  };\n};\n", "import type { RequestInit } from 'node-fetch';\nimport fetch from 'node-fetch';\nimport { Readable } from 'stream';\nimport { xyz2googlehybrid } from '../urls/googlehybrid';\n\nexport const fetchFromTileServer = ({ params, provider, url, x, y, z }: { url: string; params: RequestInit; provider: string; x: number; y: number; z: number; }) => fetch(url, params)\n.then(async (response) => {\n  if (response.status === 200) return {\n    body: response.body,\n    status: response.status,\n  };\n  if (response.status === 404) {\n    if (provider === 'googlesat') {\n      const { url: urlHybrid } = await xyz2googlehybrid(x, y, z);\n      if (urlHybrid) return fetchFromTileServer({ params, provider: 'googlehybrid', url: urlHybrid, x, y, z });\n    }\n    return {\n      body: Readable.from(''),\n      status: response.status,\n    };\n  }\n  return {\n    body: null,\n    status: response.status,\n  };\n})\n.catch(() => {\n  return {\n    body: null,\n    status: 500,\n  };\n});\n", "export const getTileParams = ({ x, y, z }: { x: number; y: number; z: number; }) => {\n  const length = z + 3 >> 2;\n  const pathX = (x % (1 << z)).toString(16).padStart(length, '0').split('');\n  const pathY = (y % (1 << z)).toString(16).padStart(length, '0').split('');\n\n\n  const tileFileId = `${pathX.pop()}${pathY.pop()}`;\n  const tilePath = pathX.map((_val, idx) => pathX[idx] + pathY[idx]).join('/');\n  const tileId = `${tilePath}/${tileFileId}`;\n  return {\n    tileFileId,\n    tileId,\n    tilePath,\n    z,\n  };\n};\n", "import sharp from 'sharp';\nimport { getTileParams } from './getTileParams';\n\nconst worthItDatabase: Record<string, Buffer> = {};\n\nconst populateDatabase = (z: number, base: Buffer, func: 'min' | 'max') => {\n  worthItDatabase[`${z.toString(36)}/${func}`] = base;\n  if (z < -8) return;\n  const cmp = Math[func];\n  const nextBase = Buffer.alloc(256 * 256, 0);\n  for (let x = 0; x < 128; x++) {\n    for (let y = 0; y < 128; y++) {\n      nextBase[y * 256 + x] = cmp(\n        base[y * 2 * 256 + x * 2],\n        base[(y * 2 + 1) * 256 + x * 2],\n        base[y * 2 * 256 + (x * 2 + 1)],\n        base[(y * 2 + 1) * 256 + (x * 2 + 1)],\n      );\n    }\n  }\n  populateDatabase(z - 1, nextBase, func);\n};\n\npopulateDatabase(0, await sharp('tiles/gebco/0/00.png').greyscale().toFormat('raw').toBuffer(), 'max');\n\npopulateDatabase(0, await sharp('tiles/gebcomin/0/00.png').greyscale().toFormat('raw').toBuffer(), 'min');\n\nconsole.log(worthItDatabase);\n\nexport const worthIt = async ({ x, y, z }: { x: number; y: number; z: number; }) => {\n  if (z > 17) {\n    x = x >> z - 17;\n    y = y >> z - 17;\n    z = 17;\n  }\n  if (y >= (1 << z) / 4 * 3) return false;\n  const { tileId } = getTileParams({ x, y, z });\n  const tileParts = tileId.split('/');\n  tileParts.pop();\n  tileParts.pop();\n\n  const path = `${(z - 8).toString(36)}/${tileParts.join('/')}`;\n  worthItDatabase[`${path}max`] ||= await sharp(`tiles/gebco/${path}.png`).greyscale().toFormat('raw').toBuffer();\n  worthItDatabase[`${path}min`] ||= await sharp(`tiles/gebcomin/${path}.png`).greyscale().toFormat('raw').toBuffer();\n\n  const tileMax = worthItDatabase[`${path}max`];\n  const tileMin = worthItDatabase[`${path}min`];\n  const pos = (x & 0xff) + (y & 0xff) * 256;\n  const max = tileMax[pos];\n  const min = tileMin[pos];\n  // return max > 64;\n  return max > 96 && min < 144;\n};\n"],
  "mappings": "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",
  "names": ["StyQueue", "fetch", "fetch", "StyQueue"]
}
