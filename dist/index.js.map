{
  "version": 3,
  "sources": ["../src/server/index.ts", "../src/common/consts.ts", "../src/server/requestHandler/getTile.ts", "../src/common/extractProperties.ts", "../src/server/utils/xyz2quadkey.ts", "../src/server/urls/bingsat.ts", "../src/server/urls/bluemarble.ts", "../src/server/urls/cache.ts", "../src/server/urls/default.ts", "../src/server/urls/gebco.ts", "../src/server/urls/googlehybrid.ts", "../src/server/urls/googlesat.ts", "../src/server/urls/googlestreet.ts", "../src/server/urls/navionics.ts", "../src/server/urls/openseamap.ts", "../src/server/urls/opentopomap.ts", "../src/server/urls/osm.ts", "../src/server/urls/vfdensity.ts", "../src/server/utils/fetchFromTileServer.ts", "../src/server/utils/getTileParams.ts", "../src/server/utils/printStats.ts", "../src/server/utils/worthit.ts"],
  "sourcesContent": ["import { StyQueue } from '@mc-styrsky/queue';\nimport express from 'express';\nimport { port } from '../common/consts';\nimport { getTile } from './requestHandler/getTile';\nimport { printStats } from './utils/printStats';\n\nexport const pwd = '/home/sty/Documents/GitHub/mapsmirror';\n\nexport const queues = {\n  checked: 0,\n  childs: <Record<string, StyQueue>> {},\n  childsCollapsed: <Record<string, number>> {},\n  fetch: new StyQueue(10),\n  fetched: 0,\n  quiet: new StyQueue(1000),\n  stats: 0,\n  statsCount: 0,\n  verbose: new StyQueue(100),\n  worthit: 0,\n  worthitCount: 0,\n};\n\nexpress()\n.use(express.json())\n.use(express.urlencoded({ extended: true }))\n.use('', express.static('public'))\n.get('/tile/:provider/:zoom/:x/:y', getTile)\n.listen(port, () => console.log(`backend listener running on port ${port}`))\n.on('error', (e) => {\n  console.error(`cannot start listener on port ${port}`);\n  console.log(e);\n});\n\nsetInterval(printStats, 2000);\n", "export const port = 3000;\n", "import type express from 'express';\nimport { StyQueue } from '@mc-styrsky/queue';\nimport { createWriteStream } from 'fs';\nimport { mkdir, stat, unlink } from 'fs/promises';\nimport { extractProperties } from '../../common/extractProperties';\nimport { pwd, queues } from '../index';\nimport { xyz2bingsat } from '../urls/bingsat';\nimport { xyz2bluemarble } from '../urls/bluemarble';\nimport { xyz2cache } from '../urls/cache';\nimport { xyz2default } from '../urls/default';\nimport { xyz2gebco } from '../urls/gebco';\nimport { xyz2googlehybrid } from '../urls/googlehybrid';\nimport { xyz2googlesat } from '../urls/googlesat';\nimport { xyz2googlestreet } from '../urls/googlestreet';\nimport { xyz2navionics } from '../urls/navionics';\nimport { xyz2openseamap } from '../urls/openseamap';\nimport { xyz2opentopomap } from '../urls/opentopomap';\nimport { xyz2osm } from '../urls/osm';\nimport { xyz2vfdensity } from '../urls/vfdensity';\nimport { fetchFromTileServer } from '../utils/fetchFromTileServer';\nimport { getTileParams } from '../utils/getTileParams';\nimport { getMaxzoom, setMaxzoom } from '../utils/printStats';\nimport { worthIt } from '../utils/worthit';\n\nexport const getTile = async (\n  req: express.Request<{\n    provider: string;\n    zoom: string;\n    x: string;\n    y: string;\n  }, any, any, Record<string, any>, Record<string, any>>,\n  res: express.Response | null,\n): Promise<boolean | null> => {\n  try {\n    const { zoom } = extractProperties(req.params, {\n      zoom: val => parseInt(String(val)),\n    });\n    if (zoom > getMaxzoom()) setMaxzoom(zoom);\n    const max = 1 << zoom;\n    const parsePosition = (val: any) => {\n      const ret = parseInt(String(val), 16) % max;\n      return ret < 0 ? ret + max : ret;\n    };\n    const { provider, x, y } = extractProperties(req.params, {\n      provider: String,\n      x: parsePosition,\n      y: parsePosition,\n    });\n    const { quiet, ttl } = extractProperties(req.query, {\n      quiet: val => Boolean(parseInt(String(val ?? 0))),\n      ttl: val => parseInt(String(val ?? 3)),\n    });\n\n    const queue = quiet ? queues.quiet : queues.verbose;\n    const fetchChilds = await queue.enqueue(async () => {\n      try {\n        const { local = false, params = {}, url = '' } = await ({\n          bingsat: xyz2bingsat,\n          bluemarble: xyz2bluemarble,\n          cache: xyz2cache,\n          gebco: xyz2gebco,\n          googlehybrid: xyz2googlehybrid,\n          googlesat: xyz2googlesat,\n          googlestreet: xyz2googlestreet,\n          navionics: xyz2navionics,\n          openseamap: xyz2openseamap,\n          opentopomap: xyz2opentopomap,\n          osm: xyz2osm,\n          vfdensity: xyz2vfdensity,\n        }[provider] ?? xyz2default)(x, y, zoom);\n\n        if (!url) {\n          res?.sendStatus(404);\n          return false;\n        }\n\n        const { tileFileId, tilePath } = getTileParams({ x, y, z: zoom });\n\n        const file = `${tileFileId}.png`;\n        const path = `tiles/${provider}/${zoom.toString(36)}/${tilePath}`;\n        await mkdir(path, { recursive: true });\n        const filename = `${pwd}/${path}/${file}`;\n\n        const statsStart = performance.now();\n        const fileStats = await stat(filename)\n        .then(async (stats) => {\n          if (!stats.isFile()) return null;\n          if (provider === 'googlesat' && stats.size < 100) {\n            await unlink(filename);\n            return null;\n          }\n          return stats;\n        })\n        .catch(() => null);\n        queues.stats = performance.now() - statsStart;\n        queues.statsCount++;\n\n        if (fileStats) {\n          if (!quiet) console.log('[cached]', filename);\n          res?.sendFile(filename);\n          return true;\n        }\n        if (local) {\n          res?.sendStatus(404);\n          return false;\n        }\n        const worthitStart = performance.now();\n        if (!quiet || (await Promise.all([\n          worthIt({ x: x, y: y, z: zoom }),\n          worthIt({ x: x, y: y - 1, z: zoom }),\n          worthIt({ x: x, y: y + 1, z: zoom }),\n          worthIt({ x: x - 1, y: y, z: zoom }),\n          worthIt({ x: x - 1, y: y - 1, z: zoom }),\n          worthIt({ x: x - 1, y: y + 1, z: zoom }),\n          worthIt({ x: x + 1, y: y, z: zoom }),\n          worthIt({ x: x + 1, y: y - 1, z: zoom }),\n          worthIt({ x: x + 1, y: y + 1, z: zoom }),\n        ])).some(Boolean)) {\n          // console.log('[get]   ', { x: (x / max).toFixed(4), y: (y / max).toFixed(4), z: zoom }, url);\n          const imageStream = await queues.fetch.enqueue(async () => {\n            const timeoutController = new globalThis.AbortController();\n            const timeoutTimeout = setTimeout(() => timeoutController.abort(), 10000);\n            params.signal = timeoutController.signal;\n            const ret = await fetchFromTileServer({ params, provider, url, x, y, z: zoom });\n            clearTimeout(timeoutTimeout);\n            return ret;\n          });\n\n          if (imageStream.body) {\n            const writeImageStream = createWriteStream(filename);\n            writeImageStream.addListener('finish', () => {\n              if (quiet) res?.sendStatus(200);\n              else res?.sendFile(filename);\n            });\n            imageStream.body.pipe(writeImageStream);\n            return true;\n          }\n\n          console.log('no imagestream', imageStream.status, { x: (x / max).toFixed(4), y: (y / max).toFixed(4), z: zoom }, url);\n          res?.sendStatus(imageStream.status ?? 500);\n          return false;\n        }\n        queues.worthit += performance.now() - worthitStart;\n        queues.worthitCount++;\n\n        res?.sendFile(`${pwd}/unworthy.png`);\n        // console.log('unworthy', { provider, x, y, zoom });\n        return false;\n      }\n      catch (e) {\n        console.log(e);\n        return false;\n      }\n    });\n\n    queues.checked++;\n\n    if (fetchChilds && ttl > 0 && zoom < 16) pushToQueues({ provider, ttl, x, y, zoom });\n\n    return fetchChilds;\n  }\n  catch (e) {\n    console.error(e);\n    res?.status(500).send('internal server error');\n    return null;\n  }\n};\n\nasync function fetchTile ({ dx, dy, provider, ttl, x, y, zoom }: { dx: number; dy: number; provider: string; x: number; y: number; zoom: number; ttl: number }) {\n  try {\n    await getTile(\n      <any>{\n        params: {\n          provider,\n          x: (x * 2 + dx).toString(16),\n          y: (y * 2 + dy).toString(16),\n          zoom: String(zoom + 1),\n        },\n        query: {\n          quiet: '1',\n          ttl: String(ttl - 1),\n        },\n      },\n      null,\n    );\n  }\n  catch (e) {\n    console.log(e);\n  }\n}\nasync function pushToQueues ({ provider, ttl, x, y, zoom }: { ttl: number, provider: string; x: number; y: number; zoom: number; }) {\n  queues.childsCollapsed[zoom] ??= 0;\n  queues.childs[zoom] ??= new StyQueue(1000);\n  const childQueue = queues.childs[zoom];\n  queues.childsCollapsed[zoom]++;\n  while (childQueue.length > 100) await (queues.childs[zoom - 1] ??= new StyQueue(1000)).enqueue(() => new Promise(r => setTimeout(r, childQueue.length / 1)));\n  queues.childsCollapsed[zoom]--;\n  childQueue.enqueue(() => fetchTile({ dx: 0, dy: 0, provider, ttl, x, y, zoom }));\n  childQueue.enqueue(() => fetchTile({ dx: 0, dy: 1, provider, ttl, x, y, zoom }));\n  childQueue.enqueue(() => fetchTile({ dx: 1, dy: 0, provider, ttl, x, y, zoom }));\n  childQueue.enqueue(() => fetchTile({ dx: 1, dy: 1, provider, ttl, x, y, zoom }));\n}\n", "export function extractProperties<T extends object> (\n  obj: Record<string, any>,\n  builder: { [P in keyof T]: (val?: any) => T[P] },\n): T {\n  return Object.entries(builder).reduce((ret, entry) => {\n    const [key, constructor]: [string, any] = entry;\n    ret[key] = constructor(obj?.[key]);\n    return ret;\n  }, {} as T);\n}\n", "import type { XYZ } from '../../common/types/xyz';\n\nexport const xyz2quadkey = ({ x, y, z }: XYZ) => {\n  return (parseInt(y.toString(2), 4) * 2 + parseInt(x.toString(2), 4)).toString(4).padStart(z, '0');\n};\n", "import type { XYZ2Url } from '../../common/types/xyz2url';\nimport { xyz2quadkey } from '../utils/xyz2quadkey';\n\nexport const xyz2bingsat: XYZ2Url = async (x, y, z) => {\n  if (z > 20) return {};\n  return {\n    url: `https://t.ssl.ak.tiles.virtualearth.net/tiles/a${xyz2quadkey({ x, y, z })}.jpeg?g=14041&n=z&prx=1`,\n  };\n};\n", "import type { XYZ2Url } from '../../common/types/xyz2url';\n\nexport const xyz2bluemarble: XYZ2Url = async (x, y, z) => {\n  if (z > 9) return {};\n  return {\n    url: `https://s3.amazonaws.com/com.modestmaps.bluemarble/${z}-r${y}-c${x}.jpg`,\n  };\n};\n", "import type { XYZ2Url } from '../../common/types/xyz2url';\n\nexport const xyz2cache: XYZ2Url = async (x, y, z) => {\n  if (z > 9) return {};\n  return {\n    local: true,\n    url: `./cache/tiles/${z}/${x}/${y}.png`,\n  };\n};\n", "import type { XYZ2Url } from '../../common/types/xyz2url';\n\nexport const xyz2default: XYZ2Url = async () => ({});\n", "import type { XYZ2Url } from '../../common/types/xyz2url';\n\nexport const xyz2gebco: XYZ2Url = async (x, y, z) => {\n  if (z > 9) return {};\n  return {\n    local: true,\n    url: `./gebco/tiles/${z}/${x}/${y}.png`,\n  };\n};\n", "import type { XYZ2Url } from '../../common/types/xyz2url';\n\nexport const xyz2googlehybrid: XYZ2Url = async (x, y, z) => {\n  if (z > 20) return {};\n  return {\n    url: `https://mt.google.com/vt/lyrs=y&x=${x}&y=${y}&z=${z}`,\n  };\n};\n", "import type { XYZ2Url } from '../../common/types/xyz2url';\n\nexport const xyz2googlesat: XYZ2Url = async (x, y, z) => {\n  if (z > 20) return {};\n  return {\n    url: `https://mt.google.com/vt/lyrs=s&x=${x}&y=${y}&z=${z}`,\n  };\n};\n", "import type { XYZ2Url } from '../../common/types/xyz2url';\n\nexport const xyz2googlestreet: XYZ2Url = async (x, y, z) => {\n  if (z > 20) return {};\n  return {\n    url: `https://mt.google.com/vt/lyrs=m&x=${x}&y=${y}&z=${z}`,\n  };\n};\n", "import type { XYZ2Url } from '../../common/types/xyz2url';\n\nlet navtoken: null | string = null;\n\nsetInterval(() => navtoken = null, 10 * 60 * 1000);\n\nconst getNavtoken = async () => {\n  navtoken ??= await fetch('https://backend.navionics.com/tile/get_key/NAVIONICS_WEBAPP_P01/webapp.navionics.com?_=1699259111356', {\n    credentials: 'omit',\n    headers: {\n      Accept: 'text/plain, */*; q=0.01',\n      'Accept-Language': 'de,de-DE;q=0.8,en-US;q=0.5,en;q=0.3',\n      'Cache-Control': 'no-cache',\n      Pragma: 'no-cache',\n      'Sec-Fetch-Dest': 'empty',\n      'Sec-Fetch-Mode': 'cors',\n      'Sec-Fetch-Site': 'same-site',\n      'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0',\n    },\n    method: 'GET',\n    mode: 'cors',\n    referrer: 'https://webapp.navionics.com/',\n  }).then(res => {\n    if (res.status === 200) return res.text();\n    return null;\n  });\n  return navtoken;\n};\n\nexport const xyz2navionics: XYZ2Url = async (x, y, z) => {\n  if (z > 17) return {};\n  if (await getNavtoken()) return {\n    params: {\n      credentials: 'omit',\n      headers: {\n        Accept: 'image/avif,image/webp,*/*',\n        'Accept-Language': 'de,de-DE;q=0.8,en-US;q=0.5,en;q=0.3',\n        'Sec-Fetch-Dest': 'image',\n        'Sec-Fetch-Mode': 'cors',\n        'Sec-Fetch-Site': 'same-site',\n        'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0',\n      },\n      method: 'GET',\n      mode: 'cors',\n      referrer: 'https://webapp.navionics.com/',\n    },\n    url: `https://backend.navionics.com/tile/${z}/${x}/${y}?LAYERS=config_1_20.00_0&TRANSPARENT=TRUE&UGC=TRUE&theme=0&navtoken=${await getNavtoken()}`,\n  };\n  return {};\n};\n", "import type { XYZ2Url } from '../../common/types/xyz2url';\n\nexport const xyz2openseamap: XYZ2Url = async (x, y, z) => {\n  if (z > 18) return {};\n  return {\n    url: `https://tiles.openseamap.org/seamark/${z}/${x}/${y}.png`,\n  };\n};\n", "import type { XYZ2Url } from '../../common/types/xyz2url';\n\nexport const xyz2opentopomap: XYZ2Url = async (x, y, z) => {\n  if (z > 17) return {};\n  return {\n    url: `https://tile.opentopomap.org/${z}/${x}/${y}.png`,\n  };\n};\n", "import type { XYZ2Url } from '../../common/types/xyz2url';\n\nexport const xyz2osm: XYZ2Url = async (x, y, z) => {\n  if (z > 20) return {};\n  return {\n    url: `https://tile.openstreetmap.org/${z}/${x}/${y}.png`,\n  };\n};\n", "import type { XYZ2Url } from '../../common/types/xyz2url';\n\nexport const xyz2vfdensity: XYZ2Url = async (x, y, z) => {\n  if (z > 12) return {};\n  if (z < 3) return {};\n  return {\n    url: `https://density.tiles.vesselfinder.net/all/${z}/${x}/${y}.png`,\n  };\n};\n", "import type { RequestInit } from 'node-fetch';\nimport fetch from 'node-fetch';\nimport { queues } from '../index';\nimport { xyz2googlehybrid } from '../urls/googlehybrid';\n\nexport const fetchFromTileServer = ({ params, provider, url, x, y, z }: { url: string; params: RequestInit; provider: string; x: number; y: number; z: number; }) => fetch(url, params)\n.then(async (response) => {\n  queues.fetched++;\n  if (response.status === 200) return {\n    body: response.body,\n    status: response.status,\n  };\n  if (response.status === 404) {\n    if (provider === 'googlesat') {\n      const { url: urlHybrid } = await xyz2googlehybrid(x, y, z);\n      console.log('fallback to hybrid', urlHybrid);\n      if (urlHybrid) return fetchFromTileServer({ params, provider: 'googlehybrid', url: urlHybrid, x, y, z });\n    }\n    return {\n      body: null,\n      status: response.status,\n    };\n  }\n  console.log(response.status, response.statusText, url);\n  return {\n    body: null,\n    status: response.status,\n  };\n})\n.catch(() => {\n  return {\n    body: null,\n    status: 500,\n  };\n});\n", "export const getTileParams = ({ x, y, z }: { x: number; y: number; z: number; }) => {\n  const length = z + 3 >> 2;\n  const pathX = (x % (1 << z)).toString(16).padStart(length, '0').split('');\n  const pathY = (y % (1 << z)).toString(16).padStart(length, '0').split('');\n\n\n  const tileFileId = `${pathX.pop()}${pathY.pop()}`;\n  const tilePath = pathX.map((_val, idx) => pathX[idx] + pathY[idx]).join('/');\n  const tileId = `${tilePath}/${tileFileId}`;\n  return {\n    tileFileId,\n    tileId,\n    tilePath,\n    z,\n  };\n};\n", "import { queues } from '..';\n\nlet todoLast = 0;\nlet fetchedLast = 0;\nlet maxzoom = -1;\n\nexport const getMaxzoom = () => maxzoom;\nexport const setMaxzoom = (z: number) => maxzoom = z;\n\nexport const printStats = () => {\n  const partialSum = (n: number) => (1 - Math.pow(4, n)) / (1 - 4);\n  const todo = Object.entries(queues.childs).reduce(\n    (sum, [key, queue]) => {\n      const len = queue.length;\n      const collapsed = queues.childsCollapsed[key] ?? 0;\n      sum += Math.round(collapsed * partialSum(17 - parseInt(key)));\n      sum += Math.round(len * partialSum(16 - parseInt(key)));\n      return sum;\n    }, 0);\n  const done = todoLast - todo;\n  todoLast = todo;\n  console.log({\n    avg: { stats: queues.stats / queues.statsCount, worthit: queues.worthit / queues.worthitCount },\n    childs: Object.fromEntries(\n      Object.entries(queues.childs)\n      .filter(([, v]) => v?.length)\n      .map(([key, queue]) => [key, `${queue.length} (${queues.childsCollapsed[key] ?? 0})`]),\n    ),\n    fetched: `${queues.fetched - fetchedLast}/${queues.checked} (${queues.fetched})`,\n    perf: {\n      done,\n      maxzoom,\n      todo: todo.toPrecision(4),\n    },\n    queues: {\n      fetch: queues.fetch.length,\n      quiet: queues.quiet.length,\n      verbose: queues.verbose.length,\n    },\n  });\n  fetchedLast = queues.fetched;\n  queues.checked = 0;\n  queues.stats = 0;\n  queues.statsCount = 0;\n  queues.worthit = 0;\n  queues.worthitCount = 0;\n  maxzoom = -1;\n};\n", "import sharp from 'sharp';\nimport { getTileParams } from './getTileParams';\n\nconst worthItDatabase: {\n  min: Record<string, Record<string, Record<string, Buffer>>>,\n  max: Record<string, Record<string, Record<string, Buffer>>>,\n} = {\n  max: {},\n  min: {},\n};\n\nconst populateDatabase = (z: number, base: Buffer, func: 'min' | 'max') => {\n  ((worthItDatabase[func][z] ??= {})[0] ??= {})[0] = base;\n  if (z < -8) return;\n  const cmp = Math[func];\n  const nextBase = Buffer.alloc(256 * 256, 0);\n  for (let x = 0; x < 128; x++) {\n    for (let y = 0; y < 128; y++) {\n      nextBase[y * 256 + x] = cmp(\n        base[y * 2 * 256 + x * 2],\n        base[(y * 2 + 1) * 256 + x * 2],\n        base[y * 2 * 256 + (x * 2 + 1)],\n        base[(y * 2 + 1) * 256 + (x * 2 + 1)],\n      );\n    }\n  }\n  populateDatabase(z - 1, nextBase, func);\n};\n\npopulateDatabase(0, await sharp('tiles/gebcomax/0/00.png').greyscale().toFormat('raw').toBuffer(), 'max');\n\npopulateDatabase(0, await sharp('tiles/gebcomin/0/00.png').greyscale().toFormat('raw').toBuffer(), 'min');\n\nconsole.log(worthItDatabase);\n\nexport const worthIt = async ({ x, y, z }: { x: number; y: number; z: number; }) => {\n  while (x < 0) x += 1 << z;\n  while (y < 0) y += 1 << z;\n  if (z > 17) {\n    x = x >> z - 17;\n    y = y >> z - 17;\n    z = 17;\n  }\n  if (y >= (1 << z) / 4 * 3) return false;\n  const z8 = z - 8;\n  const x8 = x >> 8;\n  const y8 = y >> 8;\n  const tileMax = worthItDatabase.max[z8]?.[x8]?.[y8];\n  const tileMin = worthItDatabase.min[z8]?.[x8]?.[y8];\n\n  if (tileMin && tileMax) {\n    const pos = (x & 0xff) + (y & 0xff) * 256;\n    const max = tileMax[pos];\n    const min = tileMin[pos];\n    // return max > 64;\n    return max > 96 && min < 144;\n  }\n\n  const { tileId } = getTileParams({ x: x8, y: y8, z: z8 });\n\n  if (z8 < 0) console.log({ tileId, x, x8, y, y8, z, z8 });\n  const path = `${z8.toString(36)}/${tileId}`;\n  ((worthItDatabase.max[z8] ??= {})[x8] ??= {})[y8] = await sharp(`tiles/gebcomax/${path}.png`).greyscale().toFormat('raw').toBuffer();\n  ((worthItDatabase.min[z8] ??= {})[x8] ??= {})[y8] = await sharp(`tiles/gebcomin/${path}.png`).greyscale().toFormat('raw').toBuffer();\n  return worthIt({ x, y, z });\n};\n"],
  "mappings": "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",
  "names": ["StyQueue", "fetch", "fetch", "StyQueue"]
}
