{
  "version": 3,
  "sources": ["../src/server/index.ts", "../src/common/extractProperties.ts", "../src/server/urls/default.ts", "../src/server/urls/gebco.ts", "../src/server/urls/googlehybrid.ts", "../src/server/urls/googlesat.ts", "../src/server/urls/googlestreet.ts", "../src/server/urls/navionics.ts", "../src/server/urls/osm.ts"],
  "sourcesContent": ["import { StyQueue } from '@mc-styrsky/queue';\nimport express from 'express';\nimport { createWriteStream } from 'fs';\nimport { mkdir, stat, unlink } from 'fs/promises';\nimport fetch from 'node-fetch';\nimport { extractProperties } from '../common/extractProperties';\nimport { xyz2default } from './urls/default';\nimport { xyz2gebco } from './urls/gebco';\nimport { xyz2googlehybrid } from './urls/googlehybrid';\nimport { xyz2googlesat } from './urls/googlesat';\nimport { xyz2googlestreet } from './urls/googlestreet';\nimport { xyz2navionics } from './urls/navionics';\nimport { xyz2osm } from './urls/osm';\n\nconst pwd = '/home/sty/Documents/GitHub/mapsmirror';\nconst port = 3000;\n\nconst queues = {\n  quiet: new StyQueue(5),\n  verbose: new StyQueue(10),\n};\n\nexpress()\n.use(express.json())\n.use(express.urlencoded({ extended: true }))\n.use('', express.static('public'))\n.get('/tile/:provider/:zoom/:x/:y', async (req, res) => {\n  try {\n    const { zoom } = extractProperties(req.params, {\n      zoom: val => parseInt(String(val)),\n    });\n    const max = 1 << zoom;\n    const parsePosition = (val: any) => {\n      const ret = parseInt(String(val), 16) % max;\n      return ret < 0 ? ret + max : ret;\n    };\n    const { provider, x, y } = extractProperties(req.params, {\n      provider: String,\n      x: parsePosition,\n      y: parsePosition,\n    });\n    const { quiet, ttl } = extractProperties(req.query, {\n      quiet: val => Boolean(parseInt(String(val ?? 0))),\n      ttl: val => parseInt(String(val ?? 3)),\n    });\n\n    let fetchChilds = false;\n\n    const { params = {}, url = '' } = await ({\n      gebco: xyz2gebco,\n      googlehybrid: xyz2googlehybrid,\n      googlesat: xyz2googlesat,\n      googlestreet: xyz2googlestreet,\n      navionics: xyz2navionics,\n      osm: xyz2osm,\n    }[provider] ?? xyz2default)(x, y, zoom);\n    const length = 1 + (zoom >> 2);\n    const pathX = x.toString(16).padStart(length, '0').split('');\n    const pathY = y.toString(16).padStart(length, '0').split('');\n\n\n    const file = `${pathX.pop()}${pathY.pop()}.png`;\n    const path = `tiles/${provider}/${zoom.toString(36)}/${pathX.map((_val, idx) => pathX[idx] + pathY[idx]).join('/')}`;\n    await mkdir(path, { recursive: true });\n    const filename = `${pwd}/${path}/${file}`;\n\n    const fileStats = await stat(filename).catch(() => null);\n    if (fileStats && fileStats.isFile() && fileStats.size > 100) {\n      if (!quiet) console.log('[cached]', filename);\n      fetchChilds = true;\n      res.sendFile(filename);\n    }\n    else {\n      if (fileStats && fileStats.size > 0) {\n        console.log('[unlink]', filename);\n        await unlink(filename);\n      }\n      const queue = quiet ? queues.quiet : queues.verbose;\n      await queue.enqueue(async () => {\n        const timeoutController = new globalThis.AbortController();\n        const timeoutTimeout = setTimeout(() => timeoutController.abort(), 10000);\n\n        console.log('[get]   ', filename);\n        try {\n          params.signal = timeoutController.signal;\n          const imageStream = await fetch(url, params)\n          .then((response) => {\n            if (response.status === 200) return response.body;\n            return null;\n          })\n          .catch(() => {\n            res.status(500).json({\n              length,\n              pathX,\n              pathY,\n              provider,\n              url,\n            });\n          });\n\n          if (imageStream) {\n            fetchChilds = true;\n            const writeImageStream = createWriteStream(filename);\n            writeImageStream.addListener('finish', () => {\n              if (quiet) {\n                console.log('[precached]', queue.length, url);\n                res.sendStatus(200);\n              }\n              else {\n                console.log('[send]  ', filename);\n                res.sendFile(filename);\n              }\n            });\n            imageStream.pipe(writeImageStream);\n          }\n        }\n        catch { /* empty */ }\n        clearTimeout(timeoutTimeout);\n      });\n    }\n    if (fetchChilds && ttl > 0 && zoom < 17) {\n      const fetchTile = async (dx: number, dy: number) => {\n        const url = `http://localhost:${port}/tile/${provider}/${zoom + 1}/${x * 2 + dx}/${y * 2 + dy}?ttl=${ttl - 1}&quiet=1`;\n        try {\n          return await fetch(url);\n        }\n        catch { /* empty */ }\n        return console.log('[failed]', url);\n      };\n      Promise.all([\n        fetchTile(0, 0),\n        fetchTile(0, 1),\n        fetchTile(1, 0),\n        fetchTile(1, 1),\n      ]);\n    }\n  }\n  catch (e) {\n    console.error(e);\n    res.status(500).send('internal server error');\n  }\n})\n.listen(port, () => console.log(`backend listener running on port ${port}`))\n.on('error', (e) => {\n  console.error(`cannot start listener on port ${port}`);\n  console.log(e);\n});\n", "export function extractProperties<T extends object> (\n  obj: Record<string, any>,\n  builder: { [P in keyof T]: (val?: any) => T[P] },\n): T {\n  return Object.entries(builder).reduce((ret, entry) => {\n    const [key, constructor]: [string, any] = entry;\n    ret[key] = constructor(obj[key]);\n    return ret;\n  }, {} as T);\n}\n", "import type { XYZ2Url } from './types';\n\nexport const xyz2default: XYZ2Url = async () => ({});\n", "import type { XYZ2Url } from './types';\n\nexport const xyz2gebco: XYZ2Url = async (x, y, z) => {\n  if (z > 9) return {};\n  return {\n    url: `./gebco/tiles/${z}/${x}/${y}.png`,\n  };\n};\n", "import type { XYZ2Url } from './types';\n\nexport const xyz2googlehybrid: XYZ2Url = async (x, y, z) => {\n  if (z > 20) return {};\n  return {\n    url: `https://mt1.google.com/vt/lyrs=y&x=${x}&y=${y}&z=${z}`,\n  };\n};\n", "import type { XYZ2Url } from './types';\n\nexport const xyz2googlesat: XYZ2Url = async (x, y, z) => {\n  if (z > 20) return {};\n  return {\n    url: `https://mt1.google.com/vt/lyrs=s&x=${x}&y=${y}&z=${z}`,\n  };\n};\n", "import type { XYZ2Url } from './types';\n\nexport const xyz2googlestreet: XYZ2Url = async (x, y, z) => {\n  if (z > 20) return {};\n  return {\n    url: `https://mt1.google.com/vt/lyrs=m&x=${x}&y=${y}&z=${z}`,\n  };\n};\n", "import type { XYZ2Url } from './types';\n\nlet navtoken: null | string = null;\n\nsetInterval(() => navtoken = null, 10 * 60 * 1000);\n\nconst getNavtoken = async () => {\n  navtoken ??= await fetch('https://backend.navionics.com/tile/get_key/NAVIONICS_WEBAPP_P01/webapp.navionics.com?_=1699259111356', {\n    credentials: 'omit',\n    headers: {\n      Accept: 'text/plain, */*; q=0.01',\n      'Accept-Language': 'de,de-DE;q=0.8,en-US;q=0.5,en;q=0.3',\n      'Cache-Control': 'no-cache',\n      Pragma: 'no-cache',\n      'Sec-Fetch-Dest': 'empty',\n      'Sec-Fetch-Mode': 'cors',\n      'Sec-Fetch-Site': 'same-site',\n      'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0',\n    },\n    method: 'GET',\n    mode: 'cors',\n    referrer: 'https://webapp.navionics.com/',\n  }).then(res => {\n    if (res.status === 200) return res.text();\n    return null;\n  });\n  return navtoken;\n};\n\nexport const xyz2navionics: XYZ2Url = async (x, y, z) => {\n  if (z > 17) return {};\n  if (await getNavtoken()) return {\n    params: {\n      credentials: 'omit',\n      headers: {\n        Accept: 'image/avif,image/webp,*/*',\n        'Accept-Language': 'de,de-DE;q=0.8,en-US;q=0.5,en;q=0.3',\n        'Sec-Fetch-Dest': 'image',\n        'Sec-Fetch-Mode': 'cors',\n        'Sec-Fetch-Site': 'same-site',\n        'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0',\n      },\n      method: 'GET',\n      mode: 'cors',\n      referrer: 'https://webapp.navionics.com/',\n    },\n    url: `https://backend.navionics.com/tile/${z}/${x}/${y}?LAYERS=config_1_20.00_0&TRANSPARENT=FALSE&UGC=TRUE&theme=0&navtoken=${await getNavtoken()}`,\n  };\n  return {};\n};\n", "import type { XYZ2Url } from './types';\n\nexport const xyz2osm: XYZ2Url = async (x, y, z) => {\n  if (z > 19) return {};\n  return {\n    url: `https://tile.openstreetmap.org/${z}/${x}/${y}.png`,\n  };\n};\n"],
  "mappings": "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",
  "names": ["fetch", "fetch", "url"]
}
