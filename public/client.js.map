{
  "version": 3,
  "sources": ["../src/common/extractProperties.ts", "../src/common/consts.ts", "../src/client/createHTMLElement.ts", "../src/client/sphericCircle.ts", "../src/client/utils/frac.ts", "../src/client/utils/lat2y.ts", "../src/client/utils/lon2x.ts", "../src/client/utils/min2rad.ts", "../src/client/utils/nm2px.ts", "../src/client/utils/x2lon.ts", "../src/client/utils/y2lat.ts", "../src/client/crosshairs.ts", "../src/client/createCanvas.ts", "../src/client/rad2deg.ts", "../src/client/utils/px2nm.ts", "../src/client/updateInfoBox.ts", "../src/client/redraw.ts", "../src/client/onchange.ts", "../src/client/onmousemove.ts", "../src/client/index.ts"],
  "sourcesContent": ["export function extractProperties<T extends object> (\n  obj: Record<string, any>,\n  builder: { [P in keyof T]: (val?: any) => T[P] },\n): T {\n  return Object.entries(builder).reduce((ret, entry) => {\n    const [key, constructor]: [string, any] = entry;\n    ret[key] = constructor(obj[key]);\n    return ret;\n  }, {} as T);\n}\n", "export const port = 3000;\n", "export function createHTMLElement<T extends keyof HTMLElementTagNameMap> (params: Partial<Omit<HTMLElementTagNameMap[T], 'dataset' | 'style'>> & {\n  classes?: string[];\n  dataset?: Partial<HTMLElementTagNameMap[T]['dataset']>,\n  style?: Partial<HTMLElementTagNameMap[T]['style']>;\n  tag: T;\n  zhilds?: (HTMLElement | string | null | undefined)[];\n}): HTMLElementTagNameMap[T] {\n  const { classes, dataset, style, tag, zhilds, ...data } = params;\n\n  const element = document.createElement(tag);\n\n  Object.entries(data).forEach(([k, v]) => element[k] = v);\n\n  if (classes) classes.forEach(c => element.classList.add(c));\n  if (dataset) Object.entries(dataset).forEach(([k, v]) => element.dataset[k] = v);\n  if (style) Object.entries(style).forEach(([k, v]) => element.style[k] = v);\n  if (zhilds) zhilds.forEach(child => {\n    if (!child) return;\n    if (typeof child === 'string') element.append(document.createTextNode(child));\n    else element.append(child);\n  });\n  return element;\n}\n", "export type LatLon = [number, number, boolean];\n\nexport const sphericCircle = (lat: number, lon: number, radius: number, steps = 256): LatLon[] => {\n  const sinRadius = Math.sin(radius);\n  const cosRadius = Math.cos(radius);\n  const sinLat = Math.sin(lat);\n  const cosLat = Math.cos(lat);\n\n  const pi2 = Math.PI * 2;\n\n  const points: LatLon[] = [];\n  for (let step = 0; step <= steps; step++) {\n    const omega = step / steps * pi2;\n    const { lat2, lon2 } = sphericLatLon({ cosLat, cosRadius, lat, omega, radius, sinLat, sinRadius });\n    if (step === 0) points.push([lat2, lon + Math.abs(lon2), false]);\n    else if (step === steps / 2) {\n      points.push([lat2, lon + Math.abs(lon2), true]);\n      points.push([lat2, lon - Math.abs(lon2), false]);\n    }\n    else if (step === steps) points.push([lat2, lon - Math.abs(lon2), true]);\n    else points.push([lat2, lon + lon2, true]);\n  }\n  return points;\n};\n\nexport const sphericLatLon = ({ cosLat, cosRadius, lat, omega, radius, sinLat, sinRadius }: { lat: number; omega: number; radius: number; sinRadius?: number; cosRadius?: number; sinLat?: number; cosLat?: number; }) => {\n  sinRadius ??= Math.sin(radius);\n  cosRadius ??= Math.cos(radius);\n  sinLat ??= Math.sin(lat);\n  cosLat ??= Math.cos(lat);\n\n  const pi2 = 2 * Math.PI;\n  const lonSign = omega - pi2 * Math.floor(omega / pi2) > Math.PI ? -1 : 1;\n\n\n  const sinLat2 = Math.max(-1, Math.min(Math.cos(omega) * cosLat * sinRadius + sinLat * cosRadius, 1));\n  const lat2 = Math.asin(sinLat2);\n  const cosLat2 = Math.sqrt(1 - sinLat2 * sinLat2);\n  const cosLon2 = Math.max(-1, Math.min((cosRadius - sinLat * sinLat2) / cosLat / cosLat2, 1));\n  const lon2 = Math.acos(cosLon2) * lonSign;\n\n  const cosOmega2 = (sinLat - sinLat2 * cosRadius) / (cosLat2 * sinRadius);\n  return { cosOmega2, lat2, lon2 };\n};\n", "export const frac = (x: number) => x - Math.floor(x);\n", "import { position } from '../index';\n\nexport const lat2y = (lat: number, tiles = position.tiles) => {\n  return (0.5 - Math.asinh(Math.tan(lat)) / Math.PI / 2) * tiles;\n};\n", "import { position } from '../index';\n\nexport const lon2x = (lon: number, tiles = position.tiles) => (lon / Math.PI / 2 + 0.5) * tiles;\n", "export const min2rad = (min: number) => min / 60 / 180 * Math.PI;\n", "import { position, tileSize } from '../index';\n\nexport const nm2px = (lat: number) => {\n  const stretch = 1 / Math.cos(lat);\n  return position.tiles * tileSize / 360 / 60 * stretch;\n};\n", "import { position } from '../index';\n\nexport const x2lon = (x: number, tiles = position.tiles) => (x / tiles - 0.5) * Math.PI * 2;\n", "import { position } from '../index';\n\nexport const y2lat = (y: number, tiles = position.tiles) => Math.asin(Math.tanh((0.5 - y / tiles) * 2 * Math.PI));\n", "import { position, tileSize } from './index';\nimport { sphericCircle, sphericLatLon } from './sphericCircle';\nimport { frac } from './utils/frac';\nimport { lat2y } from './utils/lat2y';\nimport { lon2x } from './utils/lon2x';\nimport { min2rad } from './utils/min2rad';\nimport { nm2px } from './utils/nm2px';\nimport { x2lon } from './utils/x2lon';\nimport { y2lat } from './utils/y2lat';\n\nexport const crosshairs = (canvas: HTMLCanvasElement, context: CanvasRenderingContext2D) => {\n  const lat = y2lat(position.y);\n  const lon = x2lon(position.x);\n\n  const milesPerTile = 100 / nm2px(lat);\n  const scale = Math.log10(milesPerTile);\n  const scaleFloor = Math.floor(scale);\n  const scaleFrac = frac(scale);\n\n  const milesPerArc = Math.pow(10, scaleFloor) * (scaleFrac < 0.3 ? 1 : scaleFrac > 0.7 ? 5 : 2);\n  const milesPerDiv = milesPerArc / 10;\n\n  const center = {\n    x: position.x * tileSize,\n    y: position.y * tileSize,\n  };\n  let minLast = 0;\n  context.beginPath();\n  context.strokeStyle = '#ff0000';\n  context.moveTo(center.x - 5, center.y + 5);\n  context.lineTo(center.x - 5, center.y - 5);\n  context.lineTo(center.x, center.y - 10);\n  context.lineTo(center.x + 5, center.y - 5);\n  context.lineTo(center.x + 5, center.y + 5);\n  context.lineTo(center.x - 5, center.y - 5);\n  context.lineTo(center.x + 5, center.y - 5);\n  context.lineTo(center.x - 5, center.y + 5);\n  context.lineTo(center.x + 5, center.y + 5);\n  context.stroke();\n  for (let minArc = milesPerArc; minArc < milesPerArc * 100; minArc += milesPerArc) {\n    if (minArc > 10800) break;\n    const radiusX = nm2px(lat) * minArc;\n    if (radiusX > canvas.width) break;\n\n    const radDiv = min2rad(minArc);\n\n    const circlePoints = sphericCircle(lat, lon, radDiv).map(([latPoint, lonPoint, draw]) => {\n      const ret = [\n        lon2x(lonPoint) * tileSize,\n        lat2y(latPoint) * tileSize,\n        draw,\n      ] as [number, number, boolean];\n\n      return ret;\n    });\n    context.beginPath();\n    context.strokeStyle = '#ff0000';\n    circlePoints.forEach(([pointX, pointY, draw], idx) => {\n      if (draw) context.lineTo(pointX, pointY);\n      else context.moveTo(pointX, pointY);\n      if (idx === 32) context.strokeText(`${minArc.toFixed(Math.max(0, -scaleFloor))}nm`, pointX, pointY);\n    });\n    context.stroke();\n\n    const piHalf = Math.PI / 2;\n\n    context.beginPath();\n\n    for (let minDiv = minLast + milesPerDiv; minDiv < minArc; minDiv += milesPerDiv) {\n      const radDiv = min2rad(minDiv);\n      if (lat + radDiv < piHalf) {\n        const top = lat2y(lat + radDiv) * tileSize;\n        context.moveTo(center.x - 5, top);\n        context.lineTo(center.x + 5, top);\n      }\n      if (lat - radDiv > - piHalf) {\n        const bottom = lat2y(lat - radDiv) * tileSize;\n        context.moveTo(center.x - 5, bottom);\n        context.lineTo(center.x + 5, bottom);\n      }\n      const { cosOmega2, lat2, lon2 } = sphericLatLon({ lat, omega: piHalf, radius: radDiv });\n      const sinOmega2 = Math.sqrt(1 - cosOmega2 * cosOmega2);\n\n\n      context.moveTo(lon2x(lon + lon2) * tileSize + cosOmega2 * 5, lat2y(lat2) * tileSize - sinOmega2 * 5);\n      context.lineTo(lon2x(lon + lon2) * tileSize - cosOmega2 * 5, lat2y(lat2) * tileSize + sinOmega2 * 5);\n      context.moveTo(lon2x(lon - lon2) * tileSize - cosOmega2 * 5, lat2y(lat2) * tileSize - sinOmega2 * 5);\n      context.lineTo(lon2x(lon - lon2) * tileSize + cosOmega2 * 5, lat2y(lat2) * tileSize + sinOmega2 * 5);\n\n      context.strokeStyle = '#ff0000';\n    }\n    context.stroke();\n    minLast = minArc;\n  }\n};\n", "import { port } from '../common/consts';\nimport { createHTMLElement } from './createHTMLElement';\nimport { crosshairs } from './crosshairs';\nimport { position, tileSize } from './index';\n\nconst imagesMap: Record<string, HTMLImageElement> = {};\n\nexport const createCanvas = async ({\n  height, width, x, y, z,\n}: {\n  width: number;\n  height: number;\n  x: number;\n  y: number;\n  z: number;\n}) => {\n  const canvas = createHTMLElement({\n    style: {\n      height: `${height}px`,\n      width: `${width}px`,\n    },\n    tag: 'canvas',\n  });\n  canvas.width = width;\n  canvas.height = height;\n  const context = canvas.getContext('2d');\n  if (!context) return canvas;\n  const translate = {\n    x: Math.round(width / 2 - x * tileSize),\n    y: Math.round(height / 2 - y * tileSize),\n  };\n  context.translate(\n    translate.x,\n    translate.y,\n  );\n  const maxdx = Math.ceil((width - translate.x) / tileSize);\n  const maxdy = Math.ceil((height - translate.y) / tileSize);\n  const mindx = -Math.ceil(translate.x / tileSize);\n  const mindy = -Math.ceil(translate.y / tileSize);\n\n  const dxArray: number[] = [];\n  for (let dx = mindx; dx < maxdx; dx++) dxArray.push(dx);\n  const dyArray: number[] = [];\n  for (let dy = mindy; dy < maxdy; dy++) {\n    if (dy >= 0 && dy < position.tiles) dyArray.push(dy);\n  }\n\n  const usedImages: Set<string> = new Set();\n\n  await Promise.all(dxArray.map(async (dx) => {\n    await Promise.all(dyArray.map(dy => {\n      const src = `http://localhost:${port}/tile/${position.source}/${[\n        z,\n        Math.floor(dx).toString(16),\n        Math.floor(dy).toString(16),\n      ].join('/')}?ttl=${Math.max(Math.min(17, z + position.ttl) - z, 0)}`;\n\n      const imageFromMap = imagesMap[src];\n      if (imageFromMap) {\n        usedImages.add(src);\n        context.drawImage(\n          imageFromMap,\n          dx * tileSize,\n          dy * tileSize,\n          tileSize,\n          tileSize,\n        );\n        return Promise.resolve(true);\n      }\n\n      const img = new Image();\n      img.src = src;\n      const prom = new Promise(resolve => {\n        img.onload = () => {\n          imagesMap[src] = img;\n          usedImages.add(src);\n          context.drawImage(\n            img,\n            dx * tileSize,\n            dy * tileSize,\n            tileSize,\n            tileSize,\n          );\n          resolve(true);\n        };\n        img.onerror = () => resolve(false);\n      });\n      return prom;\n    }));\n  })).then(() => {\n    Object.keys(imagesMap).forEach(src => {\n      if (!usedImages.has(src)) delete imagesMap[src];\n    });\n    crosshairs(canvas, context);\n  });\n  return canvas;\n};\n", "\nexport const rad2deg = (phi: number, pad = 0, axis = ' -') => {\n  const deg = phi * 180 / Math.PI;\n  const degrees = deg | 0;\n  const minutes = (Math.abs(deg) - Math.abs(degrees)) * 60;\n\n  return `${\n    axis[deg < 0 ? 1 : 0] ?? ''\n  }${\n    (deg < 0 ? - degrees : degrees).toFixed(0).padStart(pad, '0')\n  }\u00B0 ${\n    minutes.toFixed(3).padStart(6, '0')\n  }'`;\n};\n", "import { position, tileSize } from '../index';\n\n\nexport const px2nm = (lat: number) => {\n  const stretch = 1 / Math.cos(lat);\n  return 360 * 60 / position.tiles / tileSize / stretch;\n};\n", "import { createHTMLElement } from './createHTMLElement';\nimport { container, position, tileSize } from './index';\nimport { rad2deg } from './rad2deg';\nimport { infoBox } from './redraw';\nimport { px2nm } from './utils/px2nm';\nimport { x2lon } from './utils/x2lon';\nimport { y2lat } from './utils/y2lat';\n\nexport const updateInfoBox = () => {\n  if (!container) return;\n  const { height, width } = container.getBoundingClientRect();\n\n  const lat = y2lat(position.y);\n  const lon = x2lon(position.x);\n  const latMouse = y2lat(position.y + (position.mouse.y - height / 2) / tileSize);\n  const lonMouse = x2lon(position.x + (position.mouse.x - width / 2) / tileSize);\n  infoBox.innerHTML = '';\n  infoBox.append(\n    `TTL: ${position.ttl}`,\n    createHTMLElement({ tag: 'br' }),\n    `Zoom: ${position.z} (${px2nm(lat).toPrecision(3)}nm/px)`,\n    createHTMLElement({ tag: 'br' }),\n    `Lat/Lon: ${rad2deg(lat, 2, 'NS')} ${rad2deg(lon, 3, 'EW')}`,\n    createHTMLElement({ tag: 'br' }),\n    `Mouse: ${rad2deg(latMouse, 2, 'NS')} ${rad2deg(lonMouse, 3, 'EW')}`,\n  );\n};\n", "import { createCanvas } from './createCanvas';\nimport { createHTMLElement } from './createHTMLElement';\nimport { container, position } from './index';\nimport { updateInfoBox } from './updateInfoBox';\n\nlet working = false;\nlet newWorker: boolean = false;\nexport const infoBox = createHTMLElement({\n  style: {\n    backgroundColor: '#ffffff40',\n    left: '0px',\n    position: 'absolute',\n    top: '0px',\n  },\n  tag: 'div',\n  zhilds: [\n  ],\n});\n\nexport const redraw = async () => {\n  if (!container) return;\n  if (working) {\n    if (newWorker) return;\n    newWorker = true;\n    setTimeout(() => {\n      newWorker = false;\n      redraw();\n    }, 10);\n    return;\n  }\n  working = true;\n  newWorker = false;\n  console.log('redraw');\n  const { height, width } = container.getBoundingClientRect();\n\n  await createCanvas({\n    height,\n    width,\n    ...position,\n  })\n  .then(newCanvas => {\n    if (!container) return;\n    container.innerHTML = '';\n    container.append(newCanvas);\n    updateInfoBox();\n    container.append(infoBox);\n  });\n\n  const newlocation = `${window.location.origin}${window.location.pathname}?${Object.entries({\n    source: position.source,\n    ttl: position.ttl,\n    x: position.x,\n    y: position.y,\n    z: position.z,\n  })\n  .map(([k, v]) => `${k}=${v}`)\n  .join('&')}`;\n  window.history.pushState({ path: newlocation }, '', newlocation);\n\n  setTimeout(() => working = false, 100);\n};\n", "import { container, position, tileSize } from '.';\nimport { redraw } from './redraw';\n\nexport const onchange = (event: KeyboardEvent | WheelEvent | MouseEvent) => {\n  if (!container) return;\n  const zoomIn = () => {\n    if (position.z < 20) {\n      position.z++;\n      position.x *= 2;\n      position.y *= 2;\n      position.tiles = 1 << position.z;\n    }\n  };\n  const zoomOut = () => {\n    if (position.z > 2) {\n      position.z--;\n      position.x /= 2;\n      position.y /= 2;\n      position.tiles = 1 << position.z;\n    }\n  };\n  const { type } = event;\n  if (event instanceof WheelEvent) {\n    const { clientX, clientY, deltaY } = event;\n    const { height, width } = container.getBoundingClientRect();\n\n    if (deltaY > 0) {\n      zoomOut();\n      position.x -= (clientX - width / 2) / tileSize / 2;\n      position.y -= (clientY - height / 2) / tileSize / 2;\n    }\n    else if (deltaY < 0) {\n      zoomIn();\n      position.x += (clientX - width / 2) / tileSize;\n      position.y += (clientY - height / 2) / tileSize;\n    }\n    else {\n      console.log('noop', { deltaY, type });\n      return;\n    }\n  }\n  else if (event instanceof KeyboardEvent) {\n    if (event.isComposing) return;\n    const { key } = event;\n    if (key === 'ArrowLeft') position.x--;\n    else if (key === 'ArrowRight') position.x++;\n    else if (key === 'ArrowUp') position.y--;\n    else if (key === 'ArrowDown') position.y++;\n    else if (key === '+') zoomIn();\n    else if (key === '-') zoomOut();\n    else if (key === '1') position.source = 'osm';\n    else if (key === '2') position.source = 'googlesat';\n    else if (key === '3') position.source = 'navionics';\n    else if (key === '4') position.source = 'googlestreet';\n    else if (key === '5') position.source = 'googlehybrid';\n    else if (key === '6') position.source = 'gebco';\n    else if (key === '7') position.source = 'cache';\n    else if (key === 'PageUp') position.ttl++;\n    else if (key === 'PageDown') {\n      position.ttl--;\n      if (position.ttl < 0) position.ttl = 0;\n    }\n    else {\n      console.log('noop', { key, type });\n      return;\n    }\n  }\n  else if (event instanceof MouseEvent) {\n    const { clientX, clientY } = event;\n    position.x = Math.round(position.x * tileSize + (position.mouse.x - clientX)) / tileSize;\n    position.y = Math.round(position.y * tileSize + (position.mouse.y - clientY)) / tileSize;\n  }\n\n  const tileCount = 1 << position.z;\n  position.y = Math.max(0, Math.min(position.y, tileCount));\n  if (position.x < 0) position.x += tileCount;\n  if (position.x > tileCount) position.x -= tileCount;\n\n\n  redraw();\n};\n", "import { position } from './index';\nimport { onchange } from './onchange';\nimport { updateInfoBox } from './updateInfoBox';\n\nexport const onmousemove = (event: MouseEvent) => {\n  if (event.buttons & 1) onchange(event);\n  const { clientX, clientY } = event;\n  position.mouse.x = clientX;\n  position.mouse.y = clientY;\n  updateInfoBox();\n};\n", "import { extractProperties } from '../common/extractProperties';\nimport { onchange } from './onchange';\nimport { onmousemove } from './onmousemove';\nimport { redraw } from './redraw';\nconst {\n  container: containerId = '',\n} = Object.fromEntries(new URL(import.meta.url).searchParams.entries());\n\nexport const container = document.getElementById(containerId);\n\nexport const position = extractProperties(Object.fromEntries(new URL(window.location.href).searchParams.entries()), {\n  mouse: () => ({\n    down: false,\n    x: 0,\n    y: 0,\n  }),\n  source: val => String(val ?? 'osm'),\n  tiles: () => 1,\n  ttl: val => Number(val ?? 0),\n  x: val => Number(val ?? 2),\n  y: val => Number(val ?? 2),\n  z: val => Number(val ?? 2),\n});\nposition.tiles = 1 << position.z;\n\nexport const tileSize = 256;\n\nif (container) {\n  window.addEventListener('keydown', onchange);\n  window.addEventListener('wheel', onchange);\n  window.addEventListener('mousedown', onchange);\n  window.addEventListener('mouseup', onchange);\n  window.addEventListener('mousemove', onmousemove);\n\n  redraw();\n}\n"],
  "mappings": "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",
  "names": ["radDiv"]
}
