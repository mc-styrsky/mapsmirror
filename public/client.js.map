{
  "version": 3,
  "sources": ["../src/client/createHTMLElement.ts", "../src/client/containers/infoBox.ts", "../src/client/containers/mapContainer.ts", "../src/client/containers/overlayContainer.ts", "../src/common/extractProperties.ts", "../src/client/globals/position.ts", "../src/client/utils/px2nm.ts", "../src/client/globals/units.ts", "../src/client/utils/rad2deg.ts", "../src/client/utils/x2lon.ts", "../src/client/utils/y2lat.ts", "../src/client/updateInfoBox.ts", "../src/client/getUserLocation.ts", "../src/client/sphericCircle.ts", "../src/client/utils/frac.ts", "../src/client/utils/lat2y.ts", "../src/client/utils/lon2x.ts", "../src/client/utils/min2rad.ts", "../src/client/utils/nm2px.ts", "../src/client/canvases/crosshairs.ts", "../src/client/drawImage.ts", "../src/client/canvases/mapCanvas.ts", "../src/client/canvases/net.ts", "../src/client/redraw.ts", "../src/client/onchange.ts", "../src/client/onmousemove.ts", "../src/client/index.ts"],
  "sourcesContent": ["export function createHTMLElement<T extends keyof HTMLElementTagNameMap> (params: Partial<Omit<HTMLElementTagNameMap[T], 'dataset' | 'style'>> & {\n  classes?: string[];\n  dataset?: Partial<HTMLElementTagNameMap[T]['dataset']>,\n  style?: Partial<HTMLElementTagNameMap[T]['style']>;\n  tag: T;\n  zhilds?: (HTMLElement | string | null | undefined)[];\n}): HTMLElementTagNameMap[T] {\n  const { classes, dataset, style, tag, zhilds, ...data } = params;\n\n  const element = document.createElement(tag);\n\n  Object.entries(data).forEach(([k, v]) => element[k] = v);\n\n  if (classes) classes.forEach(c => element.classList.add(c));\n  if (dataset) Object.entries(dataset).forEach(([k, v]) => element.dataset[k] = v);\n  if (style) Object.entries(style).forEach(([k, v]) => element.style[k] = v);\n  if (zhilds) zhilds.forEach(child => {\n    if (!child) return;\n    if (typeof child === 'string') element.append(document.createTextNode(child));\n    else element.append(child);\n  });\n  return element;\n}\n", "import { createHTMLElement } from '../createHTMLElement';\n\n\nexport const infoBox = createHTMLElement({\n  style: {\n    backgroundColor: '#80808080',\n    borderBottomRightRadius: '1em',\n    left: '0px',\n    padding: '0.3em',\n    position: 'absolute',\n    top: '0px',\n  },\n  tag: 'div',\n  zhilds: [],\n});\n", "import { createHTMLElement } from '../createHTMLElement';\n\nexport const mapContainer = createHTMLElement({\n  style: {\n    left: '0px',\n    position: 'absolute',\n    top: '0px',\n  },\n  tag: 'div',\n  zhilds: [],\n});\n", "import { createHTMLElement } from '../createHTMLElement';\n\nexport const overlayContainer = createHTMLElement({\n  style: {\n    left: '0px',\n    position: 'absolute',\n    top: '0px',\n  },\n  tag: 'div',\n  zhilds: [],\n});\n", "export function extractProperties<T extends object> (\n  obj: Record<string, any>,\n  builder: { [P in keyof T]: (val?: any) => T[P] },\n): T {\n  return Object.entries(builder).reduce((ret, entry) => {\n    const [key, constructor]: [string, any] = entry;\n    ret[key] = constructor(obj[key]);\n    return ret;\n  }, {} as T);\n}\n", "import type { XYZ } from '../../common/types/xyz';\nimport { extractProperties } from '../../common/extractProperties';\n\n\nconst { source, ttl, x, y, z } = extractProperties(Object.fromEntries(new URL(window.location.href).searchParams.entries()), {\n  source: val => String(val ?? 'osm'),\n  ttl: val => parseInt(val ?? 0),\n  x: val => parseFloat(val ?? 2),\n  y: val => parseFloat(val ?? 2),\n  z: val => parseInt(val ?? 2),\n});\n\nexport const position = {\n  map: <XYZ> { x, y, z },\n  mouse: {\n    down: false,\n    x: 0,\n    y: 0,\n  },\n  show: { crosshairs: true },\n  source,\n  tiles: 1 << z,\n  ttl,\n  user: {\n    accuracy: 0,\n    latitude: 0,\n    longitude: 0,\n    timestamp: 0,\n  },\n  x,\n  y,\n  z,\n};\n", "import { position } from '../globals/position';\nimport { tileSize } from '../index';\n\n\nexport const px2nm = (lat: number) => {\n  const stretch = 1 / Math.cos(lat);\n  return 360 * 60 / position.tiles / tileSize / stretch;\n};\n", "export const units = {\n  coords: <'decimal' | 'minutes'> 'minutes',\n};\n", "import { units } from '../globals/units';\n\ntype CoordsParams = {phi: number, pad: number, axis: string};\nconst func = {\n  decimal: ({ axis = ' -', pad = 0, phi }: CoordsParams) => {\n    let deg = Math.round(phi * 180 / Math.PI % 360 * 100000) / 100000;\n    while (deg > 180) deg -= 360;\n    while (deg < -180) deg += 360;\n\n    return `${\n      axis[deg < 0 ? 1 : 0] ?? ''\n    }${\n      (deg < 0 ? - deg : deg).toFixed(5).padStart(pad + 6, '0')\n    }\u00B0`;\n  },\n  minutes: ({ axis = ' -', pad = 0, phi }: CoordsParams) => {\n    let deg = Math.round(phi * 180 / Math.PI % 360 * 60000) / 60000;\n    while (deg > 180) deg -= 360;\n    while (deg < -180) deg += 360;\n    const degrees = deg | 0;\n    const minutes = (Math.abs(deg) - Math.abs(degrees)) * 60;\n\n    return `${\n      axis[deg < 0 ? 1 : 0] ?? ''\n    }${\n      (deg < 0 ? - degrees : degrees).toFixed(0).padStart(pad, '0')\n    }\u00B0 ${\n      minutes.toFixed(3).padStart(6, '0')\n    }'`;\n  } };\n\nexport const rad2deg = ({ axis = ' -', pad = 0, phi }: CoordsParams) => func[units.coords]({ axis, pad, phi });\n", "import { position } from '../globals/position';\n\nexport const x2lon = (x: number, tiles = position.tiles) => (x / tiles - 0.5) * Math.PI * 2;\n", "import { position } from '../globals/position';\n\nexport const y2lat = (y: number, tiles = position.tiles) => Math.asin(Math.tanh((0.5 - y / tiles) * 2 * Math.PI));\n", "import { infoBox } from './containers/infoBox';\nimport { createHTMLElement } from './createHTMLElement';\nimport { position } from './globals/position';\nimport { container, tileSize } from './index';\nimport { px2nm } from './utils/px2nm';\nimport { rad2deg } from './utils/rad2deg';\nimport { x2lon } from './utils/x2lon';\nimport { y2lat } from './utils/y2lat';\n\nexport const updateInfoBox = () => {\n  if (!container) return;\n  const { height, width } = container.getBoundingClientRect();\n\n\n  const lat = y2lat(position.y);\n  const lon = x2lon(position.x);\n  const latMouse = y2lat(position.y + (position.mouse.y - height / 2) / tileSize);\n  const lonMouse = x2lon(position.x + (position.mouse.x - width / 2) / tileSize);\n\n  const scale = (() => {\n    let nm = px2nm(lat);\n    let px = 1;\n\n    if (nm >= 1) return `${px2nm(lat).toPrecision(3)}nm/px`;\n    while (nm < 1) {\n      nm *= 10;\n      px *= 10;\n    }\n    return `${nm.toPrecision(3)}nm/${px.toFixed(0)}px`;\n  })();\n\n  infoBox.innerHTML = '';\n  infoBox.append(\n    `Scale: ${scale} (Zoom ${position.z})`,\n    createHTMLElement({ tag: 'br' }),\n    `Lat/Lon: ${rad2deg({ axis: 'NS', pad: 2, phi: lat })} ${rad2deg({ axis: 'EW', pad: 3, phi: lon })}`,\n    createHTMLElement({ tag: 'br' }),\n    `Mouse: ${rad2deg({ axis: 'NS', pad: 2, phi: latMouse })} ${rad2deg({ axis: 'EW', pad: 3, phi: lonMouse })}`,\n    createHTMLElement({ tag: 'br' }),\n    `User: ${rad2deg({ axis: 'NS', pad: 2, phi: position.user.latitude })} ${rad2deg({ axis: 'EW', pad: 3, phi: position.user.longitude })} (@${new Date(position.user.timestamp).toLocaleTimeString()})`,\n  );\n};\n", "import { position } from './globals/position';\nimport { updateInfoBox } from './updateInfoBox';\n\nlet geolocationBlocked = false;\nexport const updateGeoLocation = async () => {\n  if (geolocationBlocked) return position.user;\n  await new Promise((resolve: PositionCallback, reject: PositionErrorCallback) => {\n    return navigator.geolocation.getCurrentPosition(\n      resolve,\n      reject,\n      {\n        enableHighAccuracy: true,\n        maximumAge: 0,\n        timeout: 5000,\n      },\n    );\n  })\n  .then((pos) => {\n    const { accuracy, latitude, longitude } = pos.coords;\n    position.user = {\n      accuracy,\n      latitude: latitude * Math.PI / 180,\n      longitude: longitude * Math.PI / 180,\n      timestamp: pos.timestamp,\n    };\n  })\n  .catch((err) => {\n    if (err.code === 1) geolocationBlocked = true;\n    console.warn(`ERROR(${err.code}): ${err.message}`);\n  });\n\n  updateInfoBox();\n  return position.user;\n};\n", "export type LatLon = [number, number, boolean];\n\nexport const sphericCircle = (lat: number, lon: number, radius: number, steps = 256): LatLon[] => {\n  const sinRadius = Math.sin(radius);\n  const cosRadius = Math.cos(radius);\n  const sinLat = Math.sin(lat);\n  const cosLat = Math.cos(lat);\n\n  const pi2 = Math.PI * 2;\n\n  const points: LatLon[] = [];\n  for (let step = 0; step <= steps; step++) {\n    const omega = step / steps * pi2;\n    const { lat2, lon2 } = sphericLatLon({ cosLat, cosRadius, lat, omega, radius, sinLat, sinRadius });\n    if (step === 0) points.push([lat2, lon + Math.abs(lon2), false]);\n    else if (step === steps / 2) {\n      points.push([lat2, lon + Math.abs(lon2), true]);\n      points.push([lat2, lon - Math.abs(lon2), false]);\n    }\n    else if (step === steps) points.push([lat2, lon - Math.abs(lon2), true]);\n    else points.push([lat2, lon + lon2, true]);\n  }\n  return points;\n};\n\nexport const sphericLatLon = ({ cosLat, cosRadius, lat, omega, radius, sinLat, sinRadius }: { lat: number; omega: number; radius: number; sinRadius?: number; cosRadius?: number; sinLat?: number; cosLat?: number; }) => {\n  sinRadius ??= Math.sin(radius);\n  cosRadius ??= Math.cos(radius);\n  sinLat ??= Math.sin(lat);\n  cosLat ??= Math.cos(lat);\n\n  const pi2 = 2 * Math.PI;\n  const lonSign = omega - pi2 * Math.floor(omega / pi2) > Math.PI ? -1 : 1;\n\n\n  const sinLat2 = Math.max(-1, Math.min(Math.cos(omega) * cosLat * sinRadius + sinLat * cosRadius, 1));\n  const lat2 = Math.asin(sinLat2);\n  const cosLat2 = Math.sqrt(1 - sinLat2 * sinLat2);\n  const cosLon2 = Math.max(-1, Math.min((cosRadius - sinLat * sinLat2) / cosLat / cosLat2, 1));\n  const lon2 = Math.acos(cosLon2) * lonSign;\n\n  const cosOmega2 = (sinLat - sinLat2 * cosRadius) / (cosLat2 * sinRadius);\n  return { cosOmega2, lat2, lon2 };\n};\n", "export const frac = (x: number) => x - Math.floor(x);\n", "import { position } from '../globals/position';\n\nexport const lat2y = (lat: number, tiles = position.tiles) => {\n  return (0.5 - Math.asinh(Math.tan(lat)) / Math.PI / 2) * tiles;\n};\n", "import { position } from '../globals/position';\n\nexport const lon2x = (lon: number, tiles = position.tiles) => (lon / Math.PI / 2 + 0.5) * tiles;\n", "export const min2rad = (min: number) => min / 60 / 180 * Math.PI;\n", "import { position } from '../globals/position';\nimport { tileSize } from '../index';\n\nexport const nm2px = (lat: number) => {\n  const stretch = 1 / Math.cos(lat);\n  return position.tiles * tileSize / 360 / 60 * stretch;\n};\n", "import type { Size } from '../../common/types/size';\nimport type { XYZ } from '../../common/types/xyz';\nimport { createHTMLElement } from '../createHTMLElement';\nimport { position } from '../globals/position';\nimport { tileSize } from '../index';\nimport { sphericCircle, sphericLatLon } from '../sphericCircle';\nimport { frac } from '../utils/frac';\nimport { lat2y } from '../utils/lat2y';\nimport { lon2x } from '../utils/lon2x';\nimport { min2rad } from '../utils/min2rad';\nimport { nm2px } from '../utils/nm2px';\nimport { x2lon } from '../utils/x2lon';\nimport { y2lat } from '../utils/y2lat';\n\nexport const createCrosshairsCanvas = ({\n  height,\n  width,\n  x,\n  y,\n}: Pick<XYZ, 'x' | 'y'> & Size) => {\n  const canvas = createHTMLElement({\n    height,\n    style: {\n      height: `${height}px`,\n      position: 'absolute',\n      width: `${width}px`,\n    },\n    tag: 'canvas',\n    width,\n  });\n  const context = canvas.getContext('2d');\n  if (!position.show.crosshairs || !context) return canvas;\n  const lat = y2lat(y);\n  const lon = x2lon(x);\n\n  const milesPerTile = 100 / nm2px(lat);\n  const scale = Math.log10(milesPerTile);\n  const scaleFloor = Math.floor(scale);\n  const scaleFrac = frac(scale);\n\n  const milesPerArc = Math.pow(10, scaleFloor) * (scaleFrac < 0.3 ? 1 : scaleFrac > 0.7 ? 5 : 2);\n  const milesPerDiv = milesPerArc / 10;\n\n  context.translate(width / 2, height / 2);\n  let minLast = 0;\n  context.beginPath();\n  context.strokeStyle = '#ff0000';\n  context.moveTo(- 5, 5);\n  context.lineTo(5, - 5);\n  context.moveTo(5, 5);\n  context.lineTo(- 5, - 5);\n  context.stroke();\n  for (let minArc = milesPerArc; minArc < 10800; minArc += milesPerArc) {\n    const radiusX = nm2px(lat) * minArc;\n    if (radiusX > canvas.width) break;\n\n    const radDiv = min2rad(minArc);\n\n    const circlePoints = sphericCircle(lat, lon, radDiv).map(([latPoint, lonPoint, draw]) => ({\n      draw,\n      tx: (lon2x(lonPoint) - x) * tileSize,\n      ty: (lat2y(latPoint) - y) * tileSize,\n    }));\n    context.beginPath();\n    context.strokeStyle = '#ff0000';\n    circlePoints\n    .forEach(({ draw, tx, ty }, idx) => {\n      if (draw) context.lineTo(tx, ty);\n      else context.moveTo(tx, ty);\n      if (idx === 32) context.strokeText(`${minArc.toFixed(Math.max(0, -scaleFloor))}nm`, tx, ty);\n    });\n    context.stroke();\n\n    const piHalf = Math.PI / 2;\n\n    context.beginPath();\n\n    for (let minDiv = minLast + milesPerDiv; minDiv < minArc; minDiv += milesPerDiv) {\n      const radDiv = min2rad(minDiv);\n      if (lat + radDiv < piHalf) {\n        const top = (lat2y(lat + radDiv) - y) * tileSize;\n        context.moveTo(- 5, top);\n        context.lineTo(5, top);\n      }\n      if (lat - radDiv > - piHalf) {\n        const bottom = (lat2y(lat - radDiv) - y) * tileSize;\n        context.moveTo(- 5, bottom);\n        context.lineTo(5, bottom);\n      }\n      const { cosOmega2, lat2, lon2 } = sphericLatLon({ lat, omega: piHalf, radius: radDiv });\n      const sinOmega2 = Math.sqrt(1 - cosOmega2 * cosOmega2);\n\n\n      context.moveTo(\n        (lon2x(lon + lon2) - x) * tileSize + cosOmega2 * 5,\n        (lat2y(lat2) - y) * tileSize - sinOmega2 * 5,\n      );\n      context.lineTo(\n        (lon2x(lon + lon2) - x) * tileSize - cosOmega2 * 5,\n        (lat2y(lat2) - y) * tileSize + sinOmega2 * 5,\n      );\n      context.moveTo(\n        (lon2x(lon - lon2) - x) * tileSize - cosOmega2 * 5,\n        (lat2y(lat2) - y) * tileSize - sinOmega2 * 5,\n      );\n      context.lineTo(\n        (lon2x(lon - lon2) - x) * tileSize + cosOmega2 * 5,\n        (lat2y(lat2) - y) * tileSize + sinOmega2 * 5,\n      );\n\n      context.strokeStyle = '#ff0000';\n    }\n    context.stroke();\n    minLast = minArc;\n  }\n  return canvas;\n};\n", "import type { XYZ } from '../common/types/xyz';\nimport { imagesMap } from './canvases/mapCanvas';\nimport { position } from './globals/position';\nimport { tileSize } from './index';\nimport { frac } from './utils/frac';\n\nexport const drawImage = ({\n  context, scale = 1, trans, ttl, usedImages, x, y, z,\n}: XYZ & {\n  context: CanvasRenderingContext2D;\n  scale?: number;\n  trans: Pick<XYZ, 'x' | 'y'>;\n  ttl: number;\n  usedImages: Set<string>;\n}) => {\n  const src = `/tile/${position.source}/${[\n    z,\n    Math.floor(x / scale).toString(16),\n    Math.floor(y / scale).toString(16),\n  ].join('/')}?ttl=${ttl}`;\n\n  const sx = Math.floor(frac(x / scale) * scale) * tileSize / scale;\n  const sy = Math.floor(frac(y / scale) * scale) * tileSize / scale;\n  const sw = tileSize / scale;\n  const imageFromMap = imagesMap[src];\n  if (imageFromMap) {\n    usedImages.add(src);\n    context.drawImage(\n      imageFromMap,\n      sx, sy, sw, sw,\n      x * tileSize + trans.x,\n      y * tileSize + trans.y,\n      tileSize,\n      tileSize,\n    );\n    return Promise.resolve(true);\n  }\n\n  const img = new Image();\n  img.src = src;\n  const prom = new Promise(resolve => {\n    img.onload = () => {\n      imagesMap[src] = img;\n      usedImages.add(src);\n      context.drawImage(\n        img,\n        sx, sy, sw, sw,\n        x * tileSize + trans.x,\n        y * tileSize + trans.y,\n        tileSize,\n        tileSize,\n      );\n      resolve(true);\n    };\n    img.onerror = () => {\n      resolve(z > 0 ?\n        drawImage({\n          context,\n          scale: scale << 1,\n          trans,\n          ttl,\n          usedImages,\n          x, y, z: z - 1,\n        }) :\n        false,\n      );\n    };\n  });\n  return prom;\n};\n", "import type { Size } from '../../common/types/size';\nimport type { XYZ } from '../../common/types/xyz';\nimport { createHTMLElement } from '../createHTMLElement';\nimport { drawImage } from '../drawImage';\nimport { position } from '../globals/position';\nimport { tileSize } from '../index';\n\nexport const imagesMap: Record<string, HTMLImageElement> = {};\n\nexport const createMapCanvas = async ({\n  height, width, x, y, z,\n}: XYZ & Size) => {\n  const canvasWidth = width + 2 * tileSize;\n  const canvasHeight = height + 2 * tileSize;\n  const canvas = createHTMLElement({\n    style: {\n      height: `${canvasHeight}px`,\n      left: `${-tileSize}px`,\n      position: 'absolute',\n      top: `${-tileSize}px`,\n      width: `${canvasWidth}px`,\n    },\n    tag: 'canvas',\n  });\n  canvas.width = canvasWidth;\n  canvas.height = canvasHeight;\n  const context = canvas.getContext('2d');\n  if (!context) return canvas;\n  context.translate(tileSize, tileSize);\n  const trans = {\n    x: Math.round(width / 2 - x * tileSize),\n    y: Math.round(height / 2 - y * tileSize),\n  };\n  const maxdx = Math.ceil((width - trans.x) / tileSize);\n  const maxdy = Math.ceil((height - trans.y) / tileSize);\n  const mindx = - Math.ceil(trans.x / tileSize);\n  const mindy = - Math.ceil(trans.y / tileSize);\n\n  const dxArray: number[] = [];\n  for (let dx = mindx; dx < maxdx; dx++) dxArray.push(dx);\n  const dyArray: number[] = [];\n  for (let dy = mindy; dy < maxdy; dy++) {\n    if (dy >= 0 && dy < position.tiles) dyArray.push(dy);\n  }\n\n  const usedImages: Set<string> = new Set();\n\n  const ttl = Math.max(Math.min(17, z + Math.max(1, position.ttl)) - z, 0);\n  await Promise.all(dxArray.map(async (dx) => {\n    await Promise.all(dyArray.map(dy => {\n      return drawImage({ context, trans, ttl, usedImages, x: dx, y: dy, z });\n    }));\n  })).then(() => {\n    Object.keys(imagesMap).forEach(src => {\n      if (!usedImages.has(src)) delete imagesMap[src];\n    });\n  });\n  return canvas;\n};\n", "import type { Size } from '../../common/types/size';\nimport type { XYZ } from '../../common/types/xyz';\nimport { createHTMLElement } from '../createHTMLElement';\nimport { tileSize } from '../index';\nimport { lat2y } from '../utils/lat2y';\nimport { lon2x } from '../utils/lon2x';\nimport { min2rad } from '../utils/min2rad';\nimport { px2nm } from '../utils/px2nm';\nimport { rad2deg } from '../utils/rad2deg';\nimport { x2lon } from '../utils/x2lon';\nimport { y2lat } from '../utils/y2lat';\n\nconst scales = [\n  0.1,\n  0.2,\n  0.5,\n  1,\n  2,\n  5,\n  10,\n  15,\n  20,\n  30,\n  60,\n  2 * 60,\n  5 * 60,\n  10 * 60,\n  15 * 60,\n  20 * 60,\n  30 * 60,\n  45 * 60,\n];\nconst getScale = (lat: number, minPx = 100) => {\n  const target = px2nm(lat) * minPx;\n  return min2rad(scales.reduce((prev, curr) => {\n    return prev > target ?\n      prev :\n      curr;\n  }, scales[0]));\n};\n\nexport const createNetCanvas = ({\n  height,\n  width,\n  x,\n  y,\n}: Pick<XYZ, 'x' | 'y'> & Size) => {\n  const canvas = createHTMLElement({\n    height: height,\n    style: {\n      height: `${height}px`,\n      position: 'absolute',\n      width: `${width}px`,\n    },\n    tag: 'canvas',\n    width: width,\n  });\n  const context = canvas.getContext('2d');\n  if (!context) return canvas;\n  context.translate(width / 2, height / 2);\n  const lat = y2lat(y);\n  const scaleX = getScale(0, context.measureText(rad2deg({ axis: 'WW', pad: 3, phi: 0 })).width);\n  const scaleY = getScale(lat);\n\n  const left = x - width / 2 / tileSize;\n  const right = x + width / 2 / tileSize;\n  const top = y - height / 2 / tileSize;\n  const bottom = y + height / 2 / tileSize;\n\n\n  context.beginPath();\n  context.strokeStyle = '#808080';\n  const latTop = Math.floor(y2lat(top) / scaleY) * scaleY;\n  const latBottom = Math.ceil(y2lat(bottom) / scaleY) * scaleY;\n  for (let ctr = 0; ctr < 1000; ctr++) {\n    const latGrid = latTop - scaleY * ctr;\n    if (latGrid < latBottom) break;\n    const gridY = lat2y(latGrid);\n    context.strokeText(\n      rad2deg({ axis: 'NS', pad: 2, phi: latGrid }),\n      (left - x) * tileSize + 3,\n      (gridY - y) * tileSize - 3,\n    );\n    context.moveTo((left - x) * tileSize, (gridY - y) * tileSize);\n    context.lineTo((right - x) * tileSize, (gridY - y) * tileSize);\n  }\n  const lonLeft = Math.floor(x2lon(left) / scaleX) * scaleX;\n  const lonRight = Math.ceil(x2lon(right) / scaleX) * scaleX;\n  for (let ctr = 0; ctr < 1000; ctr++) {\n    const lonGrid = lonLeft + scaleX * ctr;\n    if (lonGrid > lonRight) break;\n    const gridX = lon2x(lonGrid);\n    context.strokeText(\n      rad2deg({ axis: 'EW', pad: 3, phi: lonGrid }),\n      (gridX - x) * tileSize + 3,\n      (bottom - y) * tileSize - 3,\n    );\n    // console.log(`${rad2deg(lonGrid, 2, 'NS')}: (${left - x}/${gridY - y}) - (${right - x}/${gridY - y})`);\n    context.moveTo((gridX - x) * tileSize, (top - y) * tileSize);\n    context.lineTo((gridX - x) * tileSize, (bottom - y) * tileSize);\n  }\n  context.stroke();\n  return canvas;\n};\n", "import type { Size } from '../common/types/size';\nimport type { XYZ } from '../common/types/xyz';\nimport { createCrosshairsCanvas } from './canvases/crosshairs';\nimport { createMapCanvas } from './canvases/mapCanvas';\nimport { createNetCanvas } from './canvases/net';\nimport { mapContainer } from './containers/mapContainer';\nimport { overlayContainer } from './containers/overlayContainer';\nimport { position } from './globals/position';\nimport { container, tileSize } from './index';\nimport { updateInfoBox } from './updateInfoBox';\n\nlet working = false;\nlet newWorker: boolean = false;\n\nfunction moveCanvas ({ canvas, height, width, x, y, z }: XYZ & Size & { canvas: HTMLCanvasElement; }) {\n  const scaleZ = z >= position.map.z ?\n    1 << z - position.map.z :\n    1 / (1 << position.map.z - z);\n  const shiftX = (position.map.x * scaleZ - x) * tileSize;\n  const shiftY = (position.map.y * scaleZ - y) * tileSize;\n\n  canvas.style.height = `${scaleZ * canvas.height}px`;\n  canvas.style.width = `${scaleZ * canvas.width}px`;\n  canvas.style.left = `${(width - canvas.width * scaleZ) / 2 + shiftX}px`;\n  canvas.style.top = `${(height - canvas.height * scaleZ) / 2 + shiftY}px`;\n}\n\nlet map: HTMLCanvasElement | null = null;\n\nexport const redraw = async () => {\n  if (!container) return;\n  const { height, width } = container.getBoundingClientRect();\n\n  const { tiles, x, y, z } = position;\n\n  const crosshairs = createCrosshairsCanvas({ height, width, x, y });\n  const net = createNetCanvas({ height, width, x, y });\n  overlayContainer.innerHTML = '';\n  overlayContainer.append(crosshairs, net);\n\n\n  updateInfoBox();\n\n  if (map) moveCanvas({ canvas: map, height, width, x, y, z });\n  await new Promise(r => setTimeout(r, 1));\n\n\n  if (working) {\n    if (newWorker) return;\n    newWorker = true;\n    setTimeout(() => {\n      newWorker = false;\n      redraw();\n    }, 10);\n    return;\n  }\n  working = true;\n  newWorker = false;\n  console.log('redraw');\n\n  await createMapCanvas({ height, width, x, y, z })\n  .then(newCanvas => {\n    if (!container) return;\n    position.x = (position.x + position.tiles) % position.tiles;\n    map = newCanvas;\n    position.map.x = (x + tiles) % tiles;\n    position.map.y = y;\n    position.map.z = z;\n    mapContainer.innerHTML = '';\n    mapContainer.append(newCanvas);\n  });\n\n  const newlocation = `${\n    window.location.origin\n  }${\n    window.location.pathname\n  }?${\n    Object.entries({ source: position.source, ttl: position.ttl, x: position.x, y, z })\n    .map(([k, v]) => `${k}=${v}`)\n    .join('&')\n  }`;\n  window.history.pushState({ path: newlocation }, '', newlocation);\n\n  setTimeout(() => working = false, 100);\n};\n", "import { container, tileSize } from '.';\nimport { updateGeoLocation } from './getUserLocation';\nimport { position } from './globals/position';\nimport { units } from './globals/units';\nimport { redraw } from './redraw';\nimport { lat2y } from './utils/lat2y';\nimport { lon2x } from './utils/lon2x';\n\nexport const onchange = (event: KeyboardEvent | WheelEvent | MouseEvent | UIEvent) => {\n  if (!container) return;\n  const { height, width } = container.getBoundingClientRect();\n  const { type } = event;\n\n  const zoomIn = () => {\n    if (position.z < 20) {\n      position.z++;\n      position.x *= 2;\n      position.y *= 2;\n      position.tiles = 1 << position.z;\n    }\n  };\n  const zoomOut = () => {\n    if (position.z > 2) {\n      position.z--;\n      position.x /= 2;\n      position.y /= 2;\n      position.tiles = 1 << position.z;\n    }\n  };\n  if (event instanceof WheelEvent) {\n    const { clientX, clientY, deltaY } = event;\n\n    if (deltaY > 0) {\n      zoomOut();\n      position.x -= (clientX - width / 2) / tileSize / 2;\n      position.y -= (clientY - height / 2) / tileSize / 2;\n    }\n    else if (deltaY < 0) {\n      zoomIn();\n      position.x += (clientX - width / 2) / tileSize;\n      position.y += (clientY - height / 2) / tileSize;\n    }\n    else {\n      console.log('noop', { deltaY, type });\n      return;\n    }\n  }\n  else if (event instanceof KeyboardEvent) {\n    if (event.isComposing) return;\n    const { key } = event;\n    if (key === 'ArrowLeft') position.x--;\n    else if (key === 'ArrowRight') position.x++;\n    else if (key === 'ArrowUp') position.y--;\n    else if (key === 'ArrowDown') position.y++;\n    else if (key === 'PageDown') zoomIn();\n    else if (key === 'PageUp') zoomOut();\n    else if (key === '1') position.source = 'osm';\n    else if (key === '2') position.source = 'googlesat';\n    else if (key === '3') position.source = 'navionics';\n    else if (key === '4') position.source = 'googlestreet';\n    else if (key === '5') position.source = 'googlehybrid';\n    else if (key === '6') position.source = 'gebco';\n    else if (key === '7') position.source = 'bingsat';\n    else if (key === '8') position.source = 'bluemarble';\n    else if (key === 'c') position.show.crosshairs = !position.show.crosshairs;\n    else if (key === 'd') units.coords = units.coords === 'decimal' ? 'minutes' : 'decimal';\n    else if (key === 'l') updateGeoLocation();\n    else if (key === 'r') {\n      position.x = Math.round(position.x);\n      position.y = Math.round(position.y);\n    }\n    else if (key === 'u') {\n      position.x = lon2x(position.user.longitude);\n      position.y = lat2y(position.user.latitude);\n    }\n    else {\n      console.log('noop', { key, type });\n      return;\n    }\n  }\n  else if (event instanceof MouseEvent) {\n    const { clientX, clientY } = event;\n    position.x = Math.round(position.x * tileSize + (position.mouse.x - clientX)) / tileSize;\n    position.y = Math.round(position.y * tileSize + (position.mouse.y - clientY)) / tileSize;\n  }\n\n  position.y = Math.max(0, Math.min(position.y, position.tiles));\n\n  redraw();\n};\n", "import { position } from './globals/position';\nimport { onchange } from './onchange';\nimport { updateInfoBox } from './updateInfoBox';\n\nexport const onmousemove = (event: MouseEvent) => {\n  if (event.buttons & 1) onchange(event);\n  const { clientX, clientY } = event;\n  position.mouse.x = clientX;\n  position.mouse.y = clientY;\n  updateInfoBox();\n};\n", "import { infoBox } from './containers/infoBox';\nimport { mapContainer } from './containers/mapContainer';\nimport { overlayContainer } from './containers/overlayContainer';\nimport { onchange } from './onchange';\nimport { onmousemove } from './onmousemove';\nimport { redraw } from './redraw';\nconst {\n  container: containerId = '',\n} = Object.fromEntries(new URL(import.meta.url).searchParams.entries());\n\nexport const container = document.getElementById(containerId);\nif (container) {\n  container.innerHTML = '';\n  container.append(mapContainer, overlayContainer, infoBox);\n}\n\nexport const tileSize = 256;\n\nif (container) {\n  window.addEventListener('keydown', onchange);\n  window.addEventListener('wheel', onchange);\n  window.addEventListener('mousedown', onchange);\n  window.addEventListener('mouseup', onchange);\n  window.addEventListener('mousemove', onmousemove);\n  window.addEventListener('resize', onchange);\n\n  redraw();\n}\n"],
  "mappings": "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",
  "names": ["x", "y", "x", "x", "y", "radDiv", "ttl", "x", "y", "z", "x", "y", "z", "ttl", "x", "y", "x", "y", "z"]
}
